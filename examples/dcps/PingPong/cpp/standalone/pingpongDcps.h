//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: pingpongDcps.h
//  Source: pingpongDcps.idl
//  Generated: Mon Oct 23 17:11:01 2017
//  OpenSplice 6.8.2
//  
//******************************************************************
#ifndef _PINGPONGDCPS_H_
#define _PINGPONGDCPS_H_

#include "sacpp_mapping.h"
#include "dds_dcps.h"
#include "pingpong.h"


namespace pingpong
{

   class PP_min_msgTypeSupportInterface;

   typedef PP_min_msgTypeSupportInterface * PP_min_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_min_msgTypeSupportInterface> PP_min_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_min_msgTypeSupportInterface> PP_min_msgTypeSupportInterface_out;


   class PP_min_msgDataWriter;

   typedef PP_min_msgDataWriter * PP_min_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_min_msgDataWriter> PP_min_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_min_msgDataWriter> PP_min_msgDataWriter_out;


   class PP_min_msgDataReader;

   typedef PP_min_msgDataReader * PP_min_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_min_msgDataReader> PP_min_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_min_msgDataReader> PP_min_msgDataReader_out;


   class PP_min_msgDataReaderView;

   typedef PP_min_msgDataReaderView * PP_min_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_min_msgDataReaderView> PP_min_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_min_msgDataReaderView> PP_min_msgDataReaderView_out;


   class PP_seq_msgTypeSupportInterface;

   typedef PP_seq_msgTypeSupportInterface * PP_seq_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_seq_msgTypeSupportInterface> PP_seq_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_seq_msgTypeSupportInterface> PP_seq_msgTypeSupportInterface_out;


   class PP_seq_msgDataWriter;

   typedef PP_seq_msgDataWriter * PP_seq_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_seq_msgDataWriter> PP_seq_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_seq_msgDataWriter> PP_seq_msgDataWriter_out;


   class PP_seq_msgDataReader;

   typedef PP_seq_msgDataReader * PP_seq_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_seq_msgDataReader> PP_seq_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_seq_msgDataReader> PP_seq_msgDataReader_out;


   class PP_seq_msgDataReaderView;

   typedef PP_seq_msgDataReaderView * PP_seq_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_seq_msgDataReaderView> PP_seq_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_seq_msgDataReaderView> PP_seq_msgDataReaderView_out;


   class PP_string_msgTypeSupportInterface;

   typedef PP_string_msgTypeSupportInterface * PP_string_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_string_msgTypeSupportInterface> PP_string_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_string_msgTypeSupportInterface> PP_string_msgTypeSupportInterface_out;


   class PP_string_msgDataWriter;

   typedef PP_string_msgDataWriter * PP_string_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_string_msgDataWriter> PP_string_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_string_msgDataWriter> PP_string_msgDataWriter_out;


   class PP_string_msgDataReader;

   typedef PP_string_msgDataReader * PP_string_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_string_msgDataReader> PP_string_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_string_msgDataReader> PP_string_msgDataReader_out;


   class PP_string_msgDataReaderView;

   typedef PP_string_msgDataReaderView * PP_string_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_string_msgDataReaderView> PP_string_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_string_msgDataReaderView> PP_string_msgDataReaderView_out;


   class PP_fixed_msgTypeSupportInterface;

   typedef PP_fixed_msgTypeSupportInterface * PP_fixed_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_fixed_msgTypeSupportInterface> PP_fixed_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_fixed_msgTypeSupportInterface> PP_fixed_msgTypeSupportInterface_out;


   class PP_fixed_msgDataWriter;

   typedef PP_fixed_msgDataWriter * PP_fixed_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_fixed_msgDataWriter> PP_fixed_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_fixed_msgDataWriter> PP_fixed_msgDataWriter_out;


   class PP_fixed_msgDataReader;

   typedef PP_fixed_msgDataReader * PP_fixed_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_fixed_msgDataReader> PP_fixed_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_fixed_msgDataReader> PP_fixed_msgDataReader_out;


   class PP_fixed_msgDataReaderView;

   typedef PP_fixed_msgDataReaderView * PP_fixed_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_fixed_msgDataReaderView> PP_fixed_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_fixed_msgDataReaderView> PP_fixed_msgDataReaderView_out;


   class PP_array_msgTypeSupportInterface;

   typedef PP_array_msgTypeSupportInterface * PP_array_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_array_msgTypeSupportInterface> PP_array_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_array_msgTypeSupportInterface> PP_array_msgTypeSupportInterface_out;


   class PP_array_msgDataWriter;

   typedef PP_array_msgDataWriter * PP_array_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_array_msgDataWriter> PP_array_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_array_msgDataWriter> PP_array_msgDataWriter_out;


   class PP_array_msgDataReader;

   typedef PP_array_msgDataReader * PP_array_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_array_msgDataReader> PP_array_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_array_msgDataReader> PP_array_msgDataReader_out;


   class PP_array_msgDataReaderView;

   typedef PP_array_msgDataReaderView * PP_array_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_array_msgDataReaderView> PP_array_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_array_msgDataReaderView> PP_array_msgDataReaderView_out;


   class PP_bseq_msgTypeSupportInterface;

   typedef PP_bseq_msgTypeSupportInterface * PP_bseq_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_bseq_msgTypeSupportInterface> PP_bseq_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_bseq_msgTypeSupportInterface> PP_bseq_msgTypeSupportInterface_out;


   class PP_bseq_msgDataWriter;

   typedef PP_bseq_msgDataWriter * PP_bseq_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_bseq_msgDataWriter> PP_bseq_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_bseq_msgDataWriter> PP_bseq_msgDataWriter_out;


   class PP_bseq_msgDataReader;

   typedef PP_bseq_msgDataReader * PP_bseq_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_bseq_msgDataReader> PP_bseq_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_bseq_msgDataReader> PP_bseq_msgDataReader_out;


   class PP_bseq_msgDataReaderView;

   typedef PP_bseq_msgDataReaderView * PP_bseq_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_bseq_msgDataReaderView> PP_bseq_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_bseq_msgDataReaderView> PP_bseq_msgDataReaderView_out;


   class PP_quit_msgTypeSupportInterface;

   typedef PP_quit_msgTypeSupportInterface * PP_quit_msgTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < PP_quit_msgTypeSupportInterface> PP_quit_msgTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < PP_quit_msgTypeSupportInterface> PP_quit_msgTypeSupportInterface_out;


   class PP_quit_msgDataWriter;

   typedef PP_quit_msgDataWriter * PP_quit_msgDataWriter_ptr;
   typedef DDS_DCPSInterface_var < PP_quit_msgDataWriter> PP_quit_msgDataWriter_var;
   typedef DDS_DCPSInterface_out < PP_quit_msgDataWriter> PP_quit_msgDataWriter_out;


   class PP_quit_msgDataReader;

   typedef PP_quit_msgDataReader * PP_quit_msgDataReader_ptr;
   typedef DDS_DCPSInterface_var < PP_quit_msgDataReader> PP_quit_msgDataReader_var;
   typedef DDS_DCPSInterface_out < PP_quit_msgDataReader> PP_quit_msgDataReader_out;


   class PP_quit_msgDataReaderView;

   typedef PP_quit_msgDataReaderView * PP_quit_msgDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < PP_quit_msgDataReaderView> PP_quit_msgDataReaderView_var;
   typedef DDS_DCPSInterface_out < PP_quit_msgDataReaderView> PP_quit_msgDataReaderView_out;

   struct PP_min_msgSeq_uniq_ {};
   typedef DDS_DCPSUFLSeq < PP_min_msg, struct PP_min_msgSeq_uniq_> PP_min_msgSeq;
   typedef DDS_DCPSSequence_var < PP_min_msgSeq> PP_min_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_min_msgSeq> PP_min_msgSeq_out;
   class PP_min_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_min_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_min_msgTypeSupportInterface_var _var_type;

      static PP_min_msgTypeSupportInterface_ptr _duplicate (PP_min_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_min_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_min_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_min_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_min_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_min_msgTypeSupportInterface () {};
      ~PP_min_msgTypeSupportInterface () {};
   private:
      PP_min_msgTypeSupportInterface (const PP_min_msgTypeSupportInterface &);
      PP_min_msgTypeSupportInterface & operator = (const PP_min_msgTypeSupportInterface &);
   };

   class PP_min_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_min_msgDataWriter_ptr _ptr_type;
      typedef PP_min_msgDataWriter_var _var_type;

      static PP_min_msgDataWriter_ptr _duplicate (PP_min_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_min_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_min_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_min_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_min_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_min_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_min_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_min_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_min_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_min_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_min_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_min_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_min_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_min_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_min_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_min_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_min_msg& instance_data) = 0;

   protected:
      PP_min_msgDataWriter () {};
      ~PP_min_msgDataWriter () {};
   private:
      PP_min_msgDataWriter (const PP_min_msgDataWriter &);
      PP_min_msgDataWriter & operator = (const PP_min_msgDataWriter &);
   };

   class PP_min_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_min_msgDataReader_ptr _ptr_type;
      typedef PP_min_msgDataReader_var _var_type;

      static PP_min_msgDataReader_ptr _duplicate (PP_min_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_min_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_min_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_min_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_min_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_min_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_min_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_min_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_min_msg& instance) = 0;

   protected:
      PP_min_msgDataReader () {};
      ~PP_min_msgDataReader () {};
   private:
      PP_min_msgDataReader (const PP_min_msgDataReader &);
      PP_min_msgDataReader & operator = (const PP_min_msgDataReader &);
   };

   class PP_min_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_min_msgDataReaderView_ptr _ptr_type;
      typedef PP_min_msgDataReaderView_var _var_type;

      static PP_min_msgDataReaderView_ptr _duplicate (PP_min_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_min_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_min_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_min_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_min_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_min_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_min_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_min_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_min_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_min_msg& instance) = 0;

   protected:
      PP_min_msgDataReaderView () {};
      ~PP_min_msgDataReaderView () {};
   private:
      PP_min_msgDataReaderView (const PP_min_msgDataReaderView &);
      PP_min_msgDataReaderView & operator = (const PP_min_msgDataReaderView &);
   };

   struct PP_seq_msgSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < PP_seq_msg, struct PP_seq_msgSeq_uniq_> PP_seq_msgSeq;
   typedef DDS_DCPSSequence_var < PP_seq_msgSeq> PP_seq_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_seq_msgSeq> PP_seq_msgSeq_out;
   class PP_seq_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_seq_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_seq_msgTypeSupportInterface_var _var_type;

      static PP_seq_msgTypeSupportInterface_ptr _duplicate (PP_seq_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_seq_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_seq_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_seq_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_seq_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_seq_msgTypeSupportInterface () {};
      ~PP_seq_msgTypeSupportInterface () {};
   private:
      PP_seq_msgTypeSupportInterface (const PP_seq_msgTypeSupportInterface &);
      PP_seq_msgTypeSupportInterface & operator = (const PP_seq_msgTypeSupportInterface &);
   };

   class PP_seq_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_seq_msgDataWriter_ptr _ptr_type;
      typedef PP_seq_msgDataWriter_var _var_type;

      static PP_seq_msgDataWriter_ptr _duplicate (PP_seq_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_seq_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_seq_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_seq_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_seq_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_seq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_seq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_seq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_seq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_seq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_seq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_seq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_seq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_seq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_seq_msg& instance_data) = 0;

   protected:
      PP_seq_msgDataWriter () {};
      ~PP_seq_msgDataWriter () {};
   private:
      PP_seq_msgDataWriter (const PP_seq_msgDataWriter &);
      PP_seq_msgDataWriter & operator = (const PP_seq_msgDataWriter &);
   };

   class PP_seq_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_seq_msgDataReader_ptr _ptr_type;
      typedef PP_seq_msgDataReader_var _var_type;

      static PP_seq_msgDataReader_ptr _duplicate (PP_seq_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_seq_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_seq_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_seq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_seq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_seq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_seq_msg& instance) = 0;

   protected:
      PP_seq_msgDataReader () {};
      ~PP_seq_msgDataReader () {};
   private:
      PP_seq_msgDataReader (const PP_seq_msgDataReader &);
      PP_seq_msgDataReader & operator = (const PP_seq_msgDataReader &);
   };

   class PP_seq_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_seq_msgDataReaderView_ptr _ptr_type;
      typedef PP_seq_msgDataReaderView_var _var_type;

      static PP_seq_msgDataReaderView_ptr _duplicate (PP_seq_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_seq_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_seq_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_seq_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_seq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_seq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_seq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_seq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_seq_msg& instance) = 0;

   protected:
      PP_seq_msgDataReaderView () {};
      ~PP_seq_msgDataReaderView () {};
   private:
      PP_seq_msgDataReaderView (const PP_seq_msgDataReaderView &);
      PP_seq_msgDataReaderView & operator = (const PP_seq_msgDataReaderView &);
   };

   struct PP_string_msgSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < PP_string_msg, struct PP_string_msgSeq_uniq_> PP_string_msgSeq;
   typedef DDS_DCPSSequence_var < PP_string_msgSeq> PP_string_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_string_msgSeq> PP_string_msgSeq_out;
   class PP_string_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_string_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_string_msgTypeSupportInterface_var _var_type;

      static PP_string_msgTypeSupportInterface_ptr _duplicate (PP_string_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_string_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_string_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_string_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_string_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_string_msgTypeSupportInterface () {};
      ~PP_string_msgTypeSupportInterface () {};
   private:
      PP_string_msgTypeSupportInterface (const PP_string_msgTypeSupportInterface &);
      PP_string_msgTypeSupportInterface & operator = (const PP_string_msgTypeSupportInterface &);
   };

   class PP_string_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_string_msgDataWriter_ptr _ptr_type;
      typedef PP_string_msgDataWriter_var _var_type;

      static PP_string_msgDataWriter_ptr _duplicate (PP_string_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_string_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_string_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_string_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_string_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_string_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_string_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_string_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_string_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_string_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_string_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_string_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_string_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_string_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_string_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_string_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_string_msg& instance_data) = 0;

   protected:
      PP_string_msgDataWriter () {};
      ~PP_string_msgDataWriter () {};
   private:
      PP_string_msgDataWriter (const PP_string_msgDataWriter &);
      PP_string_msgDataWriter & operator = (const PP_string_msgDataWriter &);
   };

   class PP_string_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_string_msgDataReader_ptr _ptr_type;
      typedef PP_string_msgDataReader_var _var_type;

      static PP_string_msgDataReader_ptr _duplicate (PP_string_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_string_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_string_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_string_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_string_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_string_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_string_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_string_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_string_msg& instance) = 0;

   protected:
      PP_string_msgDataReader () {};
      ~PP_string_msgDataReader () {};
   private:
      PP_string_msgDataReader (const PP_string_msgDataReader &);
      PP_string_msgDataReader & operator = (const PP_string_msgDataReader &);
   };

   class PP_string_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_string_msgDataReaderView_ptr _ptr_type;
      typedef PP_string_msgDataReaderView_var _var_type;

      static PP_string_msgDataReaderView_ptr _duplicate (PP_string_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_string_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_string_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_string_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_string_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_string_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_string_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_string_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_string_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_string_msg& instance) = 0;

   protected:
      PP_string_msgDataReaderView () {};
      ~PP_string_msgDataReaderView () {};
   private:
      PP_string_msgDataReaderView (const PP_string_msgDataReaderView &);
      PP_string_msgDataReaderView & operator = (const PP_string_msgDataReaderView &);
   };

   struct PP_fixed_msgSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < PP_fixed_msg, struct PP_fixed_msgSeq_uniq_> PP_fixed_msgSeq;
   typedef DDS_DCPSSequence_var < PP_fixed_msgSeq> PP_fixed_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_fixed_msgSeq> PP_fixed_msgSeq_out;
   class PP_fixed_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_fixed_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_fixed_msgTypeSupportInterface_var _var_type;

      static PP_fixed_msgTypeSupportInterface_ptr _duplicate (PP_fixed_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_fixed_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_fixed_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_fixed_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_fixed_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_fixed_msgTypeSupportInterface () {};
      ~PP_fixed_msgTypeSupportInterface () {};
   private:
      PP_fixed_msgTypeSupportInterface (const PP_fixed_msgTypeSupportInterface &);
      PP_fixed_msgTypeSupportInterface & operator = (const PP_fixed_msgTypeSupportInterface &);
   };

   class PP_fixed_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_fixed_msgDataWriter_ptr _ptr_type;
      typedef PP_fixed_msgDataWriter_var _var_type;

      static PP_fixed_msgDataWriter_ptr _duplicate (PP_fixed_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_fixed_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_fixed_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_fixed_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_fixed_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_fixed_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_fixed_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_fixed_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_fixed_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_fixed_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_fixed_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_fixed_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_fixed_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_fixed_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_fixed_msg& instance_data) = 0;

   protected:
      PP_fixed_msgDataWriter () {};
      ~PP_fixed_msgDataWriter () {};
   private:
      PP_fixed_msgDataWriter (const PP_fixed_msgDataWriter &);
      PP_fixed_msgDataWriter & operator = (const PP_fixed_msgDataWriter &);
   };

   class PP_fixed_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_fixed_msgDataReader_ptr _ptr_type;
      typedef PP_fixed_msgDataReader_var _var_type;

      static PP_fixed_msgDataReader_ptr _duplicate (PP_fixed_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_fixed_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_fixed_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_fixed_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_fixed_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_fixed_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_fixed_msg& instance) = 0;

   protected:
      PP_fixed_msgDataReader () {};
      ~PP_fixed_msgDataReader () {};
   private:
      PP_fixed_msgDataReader (const PP_fixed_msgDataReader &);
      PP_fixed_msgDataReader & operator = (const PP_fixed_msgDataReader &);
   };

   class PP_fixed_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_fixed_msgDataReaderView_ptr _ptr_type;
      typedef PP_fixed_msgDataReaderView_var _var_type;

      static PP_fixed_msgDataReaderView_ptr _duplicate (PP_fixed_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_fixed_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_fixed_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_fixed_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_fixed_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_fixed_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_fixed_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_fixed_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_fixed_msg& instance) = 0;

   protected:
      PP_fixed_msgDataReaderView () {};
      ~PP_fixed_msgDataReaderView () {};
   private:
      PP_fixed_msgDataReaderView (const PP_fixed_msgDataReaderView &);
      PP_fixed_msgDataReaderView & operator = (const PP_fixed_msgDataReaderView &);
   };

   struct PP_array_msgSeq_uniq_ {};
   typedef DDS_DCPSUFLSeq < PP_array_msg, struct PP_array_msgSeq_uniq_> PP_array_msgSeq;
   typedef DDS_DCPSSequence_var < PP_array_msgSeq> PP_array_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_array_msgSeq> PP_array_msgSeq_out;
   class PP_array_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_array_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_array_msgTypeSupportInterface_var _var_type;

      static PP_array_msgTypeSupportInterface_ptr _duplicate (PP_array_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_array_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_array_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_array_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_array_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_array_msgTypeSupportInterface () {};
      ~PP_array_msgTypeSupportInterface () {};
   private:
      PP_array_msgTypeSupportInterface (const PP_array_msgTypeSupportInterface &);
      PP_array_msgTypeSupportInterface & operator = (const PP_array_msgTypeSupportInterface &);
   };

   class PP_array_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_array_msgDataWriter_ptr _ptr_type;
      typedef PP_array_msgDataWriter_var _var_type;

      static PP_array_msgDataWriter_ptr _duplicate (PP_array_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_array_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_array_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_array_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_array_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_array_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_array_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_array_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_array_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_array_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_array_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_array_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_array_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_array_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_array_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_array_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_array_msg& instance_data) = 0;

   protected:
      PP_array_msgDataWriter () {};
      ~PP_array_msgDataWriter () {};
   private:
      PP_array_msgDataWriter (const PP_array_msgDataWriter &);
      PP_array_msgDataWriter & operator = (const PP_array_msgDataWriter &);
   };

   class PP_array_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_array_msgDataReader_ptr _ptr_type;
      typedef PP_array_msgDataReader_var _var_type;

      static PP_array_msgDataReader_ptr _duplicate (PP_array_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_array_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_array_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_array_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_array_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_array_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_array_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_array_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_array_msg& instance) = 0;

   protected:
      PP_array_msgDataReader () {};
      ~PP_array_msgDataReader () {};
   private:
      PP_array_msgDataReader (const PP_array_msgDataReader &);
      PP_array_msgDataReader & operator = (const PP_array_msgDataReader &);
   };

   class PP_array_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_array_msgDataReaderView_ptr _ptr_type;
      typedef PP_array_msgDataReaderView_var _var_type;

      static PP_array_msgDataReaderView_ptr _duplicate (PP_array_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_array_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_array_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_array_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_array_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_array_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_array_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_array_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_array_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_array_msg& instance) = 0;

   protected:
      PP_array_msgDataReaderView () {};
      ~PP_array_msgDataReaderView () {};
   private:
      PP_array_msgDataReaderView (const PP_array_msgDataReaderView &);
      PP_array_msgDataReaderView & operator = (const PP_array_msgDataReaderView &);
   };

   struct PP_bseq_msgSeq_uniq_ {};
   typedef DDS_DCPSUVLSeq < PP_bseq_msg, struct PP_bseq_msgSeq_uniq_> PP_bseq_msgSeq;
   typedef DDS_DCPSSequence_var < PP_bseq_msgSeq> PP_bseq_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_bseq_msgSeq> PP_bseq_msgSeq_out;
   class PP_bseq_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_bseq_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_bseq_msgTypeSupportInterface_var _var_type;

      static PP_bseq_msgTypeSupportInterface_ptr _duplicate (PP_bseq_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_bseq_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_bseq_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_bseq_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_bseq_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_bseq_msgTypeSupportInterface () {};
      ~PP_bseq_msgTypeSupportInterface () {};
   private:
      PP_bseq_msgTypeSupportInterface (const PP_bseq_msgTypeSupportInterface &);
      PP_bseq_msgTypeSupportInterface & operator = (const PP_bseq_msgTypeSupportInterface &);
   };

   class PP_bseq_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_bseq_msgDataWriter_ptr _ptr_type;
      typedef PP_bseq_msgDataWriter_var _var_type;

      static PP_bseq_msgDataWriter_ptr _duplicate (PP_bseq_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_bseq_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_bseq_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_bseq_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_bseq_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_bseq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_bseq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_bseq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_bseq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_bseq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_bseq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_bseq_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_bseq_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_bseq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_bseq_msg& instance_data) = 0;

   protected:
      PP_bseq_msgDataWriter () {};
      ~PP_bseq_msgDataWriter () {};
   private:
      PP_bseq_msgDataWriter (const PP_bseq_msgDataWriter &);
      PP_bseq_msgDataWriter & operator = (const PP_bseq_msgDataWriter &);
   };

   class PP_bseq_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_bseq_msgDataReader_ptr _ptr_type;
      typedef PP_bseq_msgDataReader_var _var_type;

      static PP_bseq_msgDataReader_ptr _duplicate (PP_bseq_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_bseq_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_bseq_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_bseq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_bseq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_bseq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_bseq_msg& instance) = 0;

   protected:
      PP_bseq_msgDataReader () {};
      ~PP_bseq_msgDataReader () {};
   private:
      PP_bseq_msgDataReader (const PP_bseq_msgDataReader &);
      PP_bseq_msgDataReader & operator = (const PP_bseq_msgDataReader &);
   };

   class PP_bseq_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_bseq_msgDataReaderView_ptr _ptr_type;
      typedef PP_bseq_msgDataReaderView_var _var_type;

      static PP_bseq_msgDataReaderView_ptr _duplicate (PP_bseq_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_bseq_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_bseq_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_bseq_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_bseq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_bseq_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_bseq_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_bseq_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_bseq_msg& instance) = 0;

   protected:
      PP_bseq_msgDataReaderView () {};
      ~PP_bseq_msgDataReaderView () {};
   private:
      PP_bseq_msgDataReaderView (const PP_bseq_msgDataReaderView &);
      PP_bseq_msgDataReaderView & operator = (const PP_bseq_msgDataReaderView &);
   };

   struct PP_quit_msgSeq_uniq_ {};
   typedef DDS_DCPSUFLSeq < PP_quit_msg, struct PP_quit_msgSeq_uniq_> PP_quit_msgSeq;
   typedef DDS_DCPSSequence_var < PP_quit_msgSeq> PP_quit_msgSeq_var;
   typedef DDS_DCPSSequence_out < PP_quit_msgSeq> PP_quit_msgSeq_out;
   class PP_quit_msgTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef PP_quit_msgTypeSupportInterface_ptr _ptr_type;
      typedef PP_quit_msgTypeSupportInterface_var _var_type;

      static PP_quit_msgTypeSupportInterface_ptr _duplicate (PP_quit_msgTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_quit_msgTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static PP_quit_msgTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_quit_msgTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_quit_msgTypeSupportInterface_ptr _this () { return this; }


   protected:
      PP_quit_msgTypeSupportInterface () {};
      ~PP_quit_msgTypeSupportInterface () {};
   private:
      PP_quit_msgTypeSupportInterface (const PP_quit_msgTypeSupportInterface &);
      PP_quit_msgTypeSupportInterface & operator = (const PP_quit_msgTypeSupportInterface &);
   };

   class PP_quit_msgDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef PP_quit_msgDataWriter_ptr _ptr_type;
      typedef PP_quit_msgDataWriter_var _var_type;

      static PP_quit_msgDataWriter_ptr _duplicate (PP_quit_msgDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_quit_msgDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_quit_msgDataWriter_ptr _this () { return this; }

      virtual DDS::LongLong register_instance (const PP_quit_msg& instance_data) = 0;
      virtual DDS::LongLong register_instance_w_timestamp (const PP_quit_msg& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long unregister_instance (const PP_quit_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long unregister_instance_w_timestamp (const PP_quit_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long write (const PP_quit_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long write_w_timestamp (const PP_quit_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long dispose (const PP_quit_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long dispose_w_timestamp (const PP_quit_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long writedispose (const PP_quit_msg& instance_data, DDS::LongLong handle) = 0;
      virtual DDS::Long writedispose_w_timestamp (const PP_quit_msg& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::Long get_key_value (PP_quit_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_quit_msg& instance_data) = 0;

   protected:
      PP_quit_msgDataWriter () {};
      ~PP_quit_msgDataWriter () {};
   private:
      PP_quit_msgDataWriter (const PP_quit_msgDataWriter &);
      PP_quit_msgDataWriter & operator = (const PP_quit_msgDataWriter &);
   };

   class PP_quit_msgDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef PP_quit_msgDataReader_ptr _ptr_type;
      typedef PP_quit_msgDataReader_var _var_type;

      static PP_quit_msgDataReader_ptr _duplicate (PP_quit_msgDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_quit_msgDataReader_ptr _narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_quit_msgDataReader_ptr _this () { return this; }

      virtual DDS::Long read (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_quit_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_quit_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_quit_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_quit_msg& instance) = 0;

   protected:
      PP_quit_msgDataReader () {};
      ~PP_quit_msgDataReader () {};
   private:
      PP_quit_msgDataReader (const PP_quit_msgDataReader &);
      PP_quit_msgDataReader & operator = (const PP_quit_msgDataReader &);
   };

   class PP_quit_msgDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef PP_quit_msgDataReaderView_ptr _ptr_type;
      typedef PP_quit_msgDataReaderView_var _var_type;

      static PP_quit_msgDataReaderView_ptr _duplicate (PP_quit_msgDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static PP_quit_msgDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static PP_quit_msgDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      PP_quit_msgDataReaderView_ptr _this () { return this; }

      virtual DDS::Long read (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long read_next_sample (PP_quit_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long take_next_sample (PP_quit_msg& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::Long read_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long take_next_instance (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
      virtual DDS::Long read_next_instance_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long take_next_instance_w_condition (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::Long return_loan (PP_quit_msgSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::Long get_key_value (PP_quit_msg& key_holder, DDS::LongLong handle) = 0;
      virtual DDS::LongLong lookup_instance (const PP_quit_msg& instance) = 0;

   protected:
      PP_quit_msgDataReaderView () {};
      ~PP_quit_msgDataReaderView () {};
   private:
      PP_quit_msgDataReaderView (const PP_quit_msgDataReaderView &);
      PP_quit_msgDataReaderView & operator = (const PP_quit_msgDataReaderView &);
   };

}




#endif
