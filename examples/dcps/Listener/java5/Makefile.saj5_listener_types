#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
JAVAC         = $(SPLICE_JAVAC)
JAR           = jar
JAVACFLAGS    = $(GENFLAGS)
CLASSEXT      = .class
CLASSDIR      = classes/
OUTPUT_OPTION = -d $(CLASSDIR)
COMPILE.java  = $(JAVAC) $(JAVACFLAGS) -cp $(JAVACCPATH) 
JAVACCPATH    = "$(SPLICE_EXTRA_CP):$(CLASSDIR):../../../../jar/dcpssaj5.jar:"
MAKEFILE      = Makefile.saj5_listener_types
DEPENDENCIES  = $(MAKEFILE)
LTARGETDIR    = ./
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
GENFLAGS      =  
CLASSES       =  $(CLASSDIR)ListenerData/*$(CLASSEXT) $(CLASSDIR)ListenerDataSubscriber$(CLASSEXT) $(CLASSDIR)ListenerDataListener$(CLASSEXT) $(CLASSDIR)ListenerDataPublisher$(CLASSEXT)
JARCLASSES    =  ListenerData/*$(CLASSEXT) ListenerDataSubscriber$(CLASSEXT) ListenerDataListener$(CLASSEXT) ListenerDataPublisher$(CLASSEXT)
JAREXT        = .jar
MAINCLASS     = ListenerDataSubscriber
JARFILE       = $(LTARGETDIR)$(LIBPREFIX)saj5_listener_types$(LIBSUFFIX)$(JAREXT)
MANIFEST      = saj5_listener_types.manifest
JARFLAGS      = cvfm
SRC           = ListenerData/*.java ListenerDataSubscriber.java ListenerDataListener.java ListenerDataPublisher.java

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(JARFILE)

$(JARFILE): $(CLASSES) $(CLASSDIR)$(MANIFEST)
	@$(TESTDIRSTART) "$(LTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(LTARGETDIR)"
	cd $(CLASSDIR) && $(JAR) $(JARFLAGS) $(JARFILE) $(MANIFEST) $(JARCLASSES) 
	$(MV) $(CLASSDIR)/$(JARFILE) .

$(CLASSDIR)$(MANIFEST):
	echo Class-Path: ../../../../jar/dcpssaj5.jar > $(CLASSDIR)$(MANIFEST)
	echo Main-Class: $(MAINCLASS) >> $(CLASSDIR)$(MANIFEST)

GENERATED_DIRTY = ListenerData

ListenerData: ../idl/ListenerData.idl
	"../../../../bin/idlpp" -I "../../../../etc/idl" -l java ../idl/ListenerData.idl

.PRECIOUS: $(GENERATED_DIRTY)
$(CLASSES): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-:

$(CLASSDIR)ListenerData/*$(CLASSEXT): ListenerData
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ListenerData/*.java

$(CLASSDIR)ListenerDataSubscriber$(CLASSEXT): ListenerDataSubscriber.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ListenerDataSubscriber.java

$(CLASSDIR)ListenerDataListener$(CLASSEXT): ListenerDataListener.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ListenerDataListener.java

$(CLASSDIR)ListenerDataPublisher$(CLASSEXT): ListenerDataPublisher.java
	@$(TESTDIRSTART) "$(CLASSDIR)" $(TESTDIREND) $(MKDIR) "$(CLASSDIR)"
	$(COMPILE.java) $(EXPORTFLAGS) $(OUTPUT_OPTION) ListenerDataPublisher.java

clean:
	-$(RM) $(CLASSES)

realclean: clean
	-$(RM) $(BIN)
	-$(RM) $(GENERATED_DIRTY)
	-$(RM) $(CLASSDIR)$(MANIFEST)

check-syntax:
	$(COMPILE.java) $(EXPORTFLAGS) $(CHK_SOURCES)

