// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.1.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_DDS_DCPS_INTERFACESC_RUAWDE_H_
#define _TAO_IDL_DDS_DCPS_INTERFACESC_RUAWDE_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "dds_dcps_builtintopicsC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 1 || TAO_BETA_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace DDS
{

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::Long DomainId_t;
  typedef ::CORBA::Long_out DomainId_t_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DomainId_t;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::LongLong InstanceHandle_t;
  typedef ::CORBA::LongLong_out InstanceHandle_t_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstanceHandle_t;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_INSTANCEHANDLESEQ_CH_)
#define _DDS_INSTANCEHANDLESEQ_CH_

  class InstanceHandleSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        InstanceHandleSeq
      >
    InstanceHandleSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        InstanceHandleSeq
      >
    InstanceHandleSeq_out;

  class  InstanceHandleSeq
    : public
        ::TAO::unbounded_value_sequence<
            InstanceHandle_t
          >
  {
  public:
    InstanceHandleSeq (void);
    InstanceHandleSeq ( ::CORBA::ULong max);
    InstanceHandleSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::LongLong* buffer,
      ::CORBA::Boolean release = false);
    InstanceHandleSeq (const InstanceHandleSeq &);
    virtual ~InstanceHandleSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef InstanceHandleSeq_var _var_type;
    typedef InstanceHandleSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstanceHandleSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::Long ReturnCode_t;
  typedef ::CORBA::Long_out ReturnCode_t_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ReturnCode_t;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::Long QosPolicyId_t;
  typedef ::CORBA::Long_out QosPolicyId_t_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_QosPolicyId_t;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::LongLong HANDLE_NIL = ACE_INT64_LITERAL (0);

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long LENGTH_UNLIMITED = -1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DURATION_INFINITE_SEC = 2147483647;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong DURATION_INFINITE_NSEC = 2147483647U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DURATION_ZERO_SEC = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong DURATION_ZERO_NSEC = 0U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long TIMESTAMP_INVALID_SEC = -1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong TIMESTAMP_INVALID_NSEC = 4294967295U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DOMAIN_ID_DEFAULT = 2147483647;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DOMAIN_ID_INVALID = -1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_OK = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_ERROR = 1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_UNSUPPORTED = 2;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_BAD_PARAMETER = 3;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_PRECONDITION_NOT_MET = 4;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_OUT_OF_RESOURCES = 5;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_NOT_ENABLED = 6;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_IMMUTABLE_POLICY = 7;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_INCONSISTENT_POLICY = 8;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_ALREADY_DELETED = 9;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_TIMEOUT = 10;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_NO_DATA = 11;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RETCODE_ILLEGAL_OPERATION = 12;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::Long ErrorCode_t;
  typedef ::CORBA::Long_out ErrorCode_t_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ErrorCode_t;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_UNDEFINED = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_ERROR = 1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_OUT_OF_RESOURCES = 2;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_CREATION_KERNEL_ENTITY_FAILED = 3;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INVALID_VALUE = 4;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INVALID_DURATION = 5;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INVALID_TIME = 6;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_ENTITY_INUSE = 7;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_CONTAINS_ENTITIES = 8;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_ENTITY_UNKNOWN = 9;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_HANDLE_NOT_REGISTERED = 10;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_HANDLE_NOT_MATCH = 11;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_HANDLE_INVALID = 12;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INVALID_SEQUENCE = 13;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_UNSUPPORTED_VALUE = 14;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INCONSISTENT_VALUE = 15;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_IMMUTABLE_QOS_POLICY = 16;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INCONSISTENT_QOS = 17;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_UNSUPPORTED_QOS_POLICY = 18;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_CONTAINS_CONDITIONS = 19;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_CONTAINS_LOANS = 20;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ERRORCODE_INCONSISTENT_TOPIC = 21;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong StatusKind;
  typedef ::CORBA::ULong_out StatusKind_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_StatusKind;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong StatusMask;
  typedef ::CORBA::ULong_out StatusMask_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_StatusMask;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong INCONSISTENT_TOPIC_STATUS = 1U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong OFFERED_DEADLINE_MISSED_STATUS = 2U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong REQUESTED_DEADLINE_MISSED_STATUS = 4U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong OFFERED_INCOMPATIBLE_QOS_STATUS = 32U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong REQUESTED_INCOMPATIBLE_QOS_STATUS = 64U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SAMPLE_LOST_STATUS = 128U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SAMPLE_REJECTED_STATUS = 256U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong DATA_ON_READERS_STATUS = 512U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong DATA_AVAILABLE_STATUS = 1024U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong LIVELINESS_LOST_STATUS = 2048U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong LIVELINESS_CHANGED_STATUS = 4096U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong PUBLICATION_MATCHED_STATUS = 8192U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong SUBSCRIPTION_MATCHED_STATUS = 16384U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ALL_DATA_DISPOSED_TOPIC_STATUS = 2147483648U;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct InconsistentTopicStatus;

  typedef
    ::TAO_Fixed_Var_T<
        InconsistentTopicStatus
      >
    InconsistentTopicStatus_var;

  typedef
    InconsistentTopicStatus &
    InconsistentTopicStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  InconsistentTopicStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef InconsistentTopicStatus_var _var_type;
    typedef InconsistentTopicStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InconsistentTopicStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct AllDataDisposedTopicStatus;

  typedef
    ::TAO_Fixed_Var_T<
        AllDataDisposedTopicStatus
      >
    AllDataDisposedTopicStatus_var;

  typedef
    AllDataDisposedTopicStatus &
    AllDataDisposedTopicStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  AllDataDisposedTopicStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef AllDataDisposedTopicStatus_var _var_type;
    typedef AllDataDisposedTopicStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_AllDataDisposedTopicStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct SampleLostStatus;

  typedef
    ::TAO_Fixed_Var_T<
        SampleLostStatus
      >
    SampleLostStatus_var;

  typedef
    SampleLostStatus &
    SampleLostStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  SampleLostStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SampleLostStatus_var _var_type;
    typedef SampleLostStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleLostStatus;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:47

  enum SampleRejectedStatusKind
  {
    NOT_REJECTED,
    REJECTED_BY_INSTANCES_LIMIT,
    REJECTED_BY_SAMPLES_LIMIT,
    REJECTED_BY_SAMPLES_PER_INSTANCE_LIMIT
  };

  typedef SampleRejectedStatusKind &SampleRejectedStatusKind_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleRejectedStatusKind;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct SampleRejectedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        SampleRejectedStatus
      >
    SampleRejectedStatus_var;

  typedef
    SampleRejectedStatus &
    SampleRejectedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  SampleRejectedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SampleRejectedStatus_var _var_type;
    typedef SampleRejectedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    DDS::SampleRejectedStatusKind last_reason;
    DDS::InstanceHandle_t last_instance_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleRejectedStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct LivelinessLostStatus;

  typedef
    ::TAO_Fixed_Var_T<
        LivelinessLostStatus
      >
    LivelinessLostStatus_var;

  typedef
    LivelinessLostStatus &
    LivelinessLostStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  LivelinessLostStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef LivelinessLostStatus_var _var_type;
    typedef LivelinessLostStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_LivelinessLostStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct LivelinessChangedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        LivelinessChangedStatus
      >
    LivelinessChangedStatus_var;

  typedef
    LivelinessChangedStatus &
    LivelinessChangedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  LivelinessChangedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef LivelinessChangedStatus_var _var_type;
    typedef LivelinessChangedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long alive_count;
    ::CORBA::Long not_alive_count;
    ::CORBA::Long alive_count_change;
    ::CORBA::Long not_alive_count_change;
    DDS::InstanceHandle_t last_publication_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_LivelinessChangedStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct OfferedDeadlineMissedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        OfferedDeadlineMissedStatus
      >
    OfferedDeadlineMissedStatus_var;

  typedef
    OfferedDeadlineMissedStatus &
    OfferedDeadlineMissedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  OfferedDeadlineMissedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef OfferedDeadlineMissedStatus_var _var_type;
    typedef OfferedDeadlineMissedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    DDS::InstanceHandle_t last_instance_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_OfferedDeadlineMissedStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct RequestedDeadlineMissedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        RequestedDeadlineMissedStatus
      >
    RequestedDeadlineMissedStatus_var;

  typedef
    RequestedDeadlineMissedStatus &
    RequestedDeadlineMissedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  RequestedDeadlineMissedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef RequestedDeadlineMissedStatus_var _var_type;
    typedef RequestedDeadlineMissedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    DDS::InstanceHandle_t last_instance_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RequestedDeadlineMissedStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct QosPolicyCount;

  typedef
    ::TAO_Fixed_Var_T<
        QosPolicyCount
      >
    QosPolicyCount_var;

  typedef
    QosPolicyCount &
    QosPolicyCount_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  QosPolicyCount
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef QosPolicyCount_var _var_type;
    typedef QosPolicyCount_out _out_type;

    static void _tao_any_destructor (void *);
    
    DDS::QosPolicyId_t policy_id;
    ::CORBA::Long count;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_QosPolicyCount;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_QOSPOLICYCOUNTSEQ_CH_)
#define _DDS_QOSPOLICYCOUNTSEQ_CH_

  class QosPolicyCountSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        QosPolicyCountSeq
      >
    QosPolicyCountSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        QosPolicyCountSeq
      >
    QosPolicyCountSeq_out;

  class  QosPolicyCountSeq
    : public
        ::TAO::unbounded_value_sequence<
            QosPolicyCount
          >
  {
  public:
    QosPolicyCountSeq (void);
    QosPolicyCountSeq ( ::CORBA::ULong max);
    QosPolicyCountSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      QosPolicyCount* buffer,
      ::CORBA::Boolean release = false);
    QosPolicyCountSeq (const QosPolicyCountSeq &);
    virtual ~QosPolicyCountSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef QosPolicyCountSeq_var _var_type;
    typedef QosPolicyCountSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_QosPolicyCountSeq;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct OfferedIncompatibleQosStatus;

  typedef
    ::TAO_Var_Var_T<
        OfferedIncompatibleQosStatus
      >
    OfferedIncompatibleQosStatus_var;

  typedef
    ::TAO_Out_T<
        OfferedIncompatibleQosStatus
      >
    OfferedIncompatibleQosStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  OfferedIncompatibleQosStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef OfferedIncompatibleQosStatus_var _var_type;
    typedef OfferedIncompatibleQosStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    DDS::QosPolicyId_t last_policy_id;
    DDS::QosPolicyCountSeq policies;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_OfferedIncompatibleQosStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct RequestedIncompatibleQosStatus;

  typedef
    ::TAO_Var_Var_T<
        RequestedIncompatibleQosStatus
      >
    RequestedIncompatibleQosStatus_var;

  typedef
    ::TAO_Out_T<
        RequestedIncompatibleQosStatus
      >
    RequestedIncompatibleQosStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  RequestedIncompatibleQosStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef RequestedIncompatibleQosStatus_var _var_type;
    typedef RequestedIncompatibleQosStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    DDS::QosPolicyId_t last_policy_id;
    DDS::QosPolicyCountSeq policies;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RequestedIncompatibleQosStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct PublicationMatchedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        PublicationMatchedStatus
      >
    PublicationMatchedStatus_var;

  typedef
    PublicationMatchedStatus &
    PublicationMatchedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  PublicationMatchedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef PublicationMatchedStatus_var _var_type;
    typedef PublicationMatchedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    ::CORBA::Long current_count;
    ::CORBA::Long current_count_change;
    DDS::InstanceHandle_t last_subscription_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_PublicationMatchedStatus;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct SubscriptionMatchedStatus;

  typedef
    ::TAO_Fixed_Var_T<
        SubscriptionMatchedStatus
      >
    SubscriptionMatchedStatus_var;

  typedef
    SubscriptionMatchedStatus &
    SubscriptionMatchedStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  SubscriptionMatchedStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SubscriptionMatchedStatus_var _var_type;
    typedef SubscriptionMatchedStatus_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Long total_count;
    ::CORBA::Long total_count_change;
    ::CORBA::Long current_count;
    ::CORBA::Long current_count_change;
    DDS::InstanceHandle_t last_publication_handle;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SubscriptionMatchedStatus;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_LISTENER__VAR_OUT_CH_)
#define _DDS_LISTENER__VAR_OUT_CH_

  class Listener;
  typedef Listener *Listener_ptr;

  typedef
    TAO_Objref_Var_T<
        Listener
      >
    Listener_var;
  
  typedef
    TAO_Objref_Out_T<
        Listener
      >
    Listener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_PROPERTYINTERFACE__VAR_OUT_CH_)
#define _DDS_PROPERTYINTERFACE__VAR_OUT_CH_

  class PropertyInterface;
  typedef PropertyInterface *PropertyInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        PropertyInterface
      >
    PropertyInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        PropertyInterface
      >
    PropertyInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_ENTITY__VAR_OUT_CH_)
#define _DDS_ENTITY__VAR_OUT_CH_

  class Entity;
  typedef Entity *Entity_ptr;

  typedef
    TAO_Objref_Var_T<
        Entity
      >
    Entity_var;
  
  typedef
    TAO_Objref_Out_T<
        Entity
      >
    Entity_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_TOPICDESCRIPTION__VAR_OUT_CH_)
#define _DDS_TOPICDESCRIPTION__VAR_OUT_CH_

  class TopicDescription;
  typedef TopicDescription *TopicDescription_ptr;

  typedef
    TAO_Objref_Var_T<
        TopicDescription
      >
    TopicDescription_var;
  
  typedef
    TAO_Objref_Out_T<
        TopicDescription
      >
    TopicDescription_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_TOPIC__VAR_OUT_CH_)
#define _DDS_TOPIC__VAR_OUT_CH_

  class Topic;
  typedef Topic *Topic_ptr;

  typedef
    TAO_Objref_Var_T<
        Topic
      >
    Topic_var;
  
  typedef
    TAO_Objref_Out_T<
        Topic
      >
    Topic_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_CONTENTFILTEREDTOPIC__VAR_OUT_CH_)
#define _DDS_CONTENTFILTEREDTOPIC__VAR_OUT_CH_

  class ContentFilteredTopic;
  typedef ContentFilteredTopic *ContentFilteredTopic_ptr;

  typedef
    TAO_Objref_Var_T<
        ContentFilteredTopic
      >
    ContentFilteredTopic_var;
  
  typedef
    TAO_Objref_Out_T<
        ContentFilteredTopic
      >
    ContentFilteredTopic_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_MULTITOPIC__VAR_OUT_CH_)
#define _DDS_MULTITOPIC__VAR_OUT_CH_

  class MultiTopic;
  typedef MultiTopic *MultiTopic_ptr;

  typedef
    TAO_Objref_Var_T<
        MultiTopic
      >
    MultiTopic_var;
  
  typedef
    TAO_Objref_Out_T<
        MultiTopic
      >
    MultiTopic_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DATAWRITER__VAR_OUT_CH_)
#define _DDS_DATAWRITER__VAR_OUT_CH_

  class DataWriter;
  typedef DataWriter *DataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        DataWriter
      >
    DataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        DataWriter
      >
    DataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DATAREADER__VAR_OUT_CH_)
#define _DDS_DATAREADER__VAR_OUT_CH_

  class DataReader;
  typedef DataReader *DataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        DataReader
      >
    DataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        DataReader
      >
    DataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DATAREADERVIEW__VAR_OUT_CH_)
#define _DDS_DATAREADERVIEW__VAR_OUT_CH_

  class DataReaderView;
  typedef DataReaderView *DataReaderView_ptr;

  typedef
    TAO_Objref_Var_T<
        DataReaderView
      >
    DataReaderView_var;
  
  typedef
    TAO_Objref_Out_T<
        DataReaderView
      >
    DataReaderView_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_SUBSCRIBER__VAR_OUT_CH_)
#define _DDS_SUBSCRIBER__VAR_OUT_CH_

  class Subscriber;
  typedef Subscriber *Subscriber_ptr;

  typedef
    TAO_Objref_Var_T<
        Subscriber
      >
    Subscriber_var;
  
  typedef
    TAO_Objref_Out_T<
        Subscriber
      >
    Subscriber_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_PUBLISHER__VAR_OUT_CH_)
#define _DDS_PUBLISHER__VAR_OUT_CH_

  class Publisher;
  typedef Publisher *Publisher_ptr;

  typedef
    TAO_Objref_Var_T<
        Publisher
      >
    Publisher_var;
  
  typedef
    TAO_Objref_Out_T<
        Publisher
      >
    Publisher_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_OBJSEQ_CH_)
#define _DDS_OBJSEQ_CH_

  class ObjSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ObjSeq
      >
    ObjSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ObjSeq
      >
    ObjSeq_out;

  class  ObjSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            ::CORBA::Object,
            ::CORBA::Object_var
          >
  {
  public:
    ObjSeq (void);
    ObjSeq ( ::CORBA::ULong max);
    ObjSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Object_ptr* buffer,
      ::CORBA::Boolean release = false);
    ObjSeq (const ObjSeq &);
    virtual ~ObjSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef ObjSeq_var _var_type;
    typedef ObjSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ObjSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_TOPICSEQ_CH_)
#define _DDS_TOPICSEQ_CH_

  class TopicSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        TopicSeq
      >
    TopicSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        TopicSeq
      >
    TopicSeq_out;

  class  TopicSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            Topic,
            Topic_var
          >
  {
  public:
    TopicSeq (void);
    TopicSeq ( ::CORBA::ULong max);
    TopicSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Topic_ptr* buffer,
      ::CORBA::Boolean release = false);
    TopicSeq (const TopicSeq &);
    virtual ~TopicSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef TopicSeq_var _var_type;
    typedef TopicSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TopicSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_DATAREADERSEQ_CH_)
#define _DDS_DATAREADERSEQ_CH_

  class DataReaderSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        DataReaderSeq
      >
    DataReaderSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        DataReaderSeq
      >
    DataReaderSeq_out;

  class  DataReaderSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            DataReader,
            DataReader_var
          >
  {
  public:
    DataReaderSeq (void);
    DataReaderSeq ( ::CORBA::ULong max);
    DataReaderSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      DataReader_ptr* buffer,
      ::CORBA::Boolean release = false);
    DataReaderSeq (const DataReaderSeq &);
    virtual ~DataReaderSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef DataReaderSeq_var _var_type;
    typedef DataReaderSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataReaderSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Listener
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Listener_ptr _ptr_type;
    typedef Listener_var _var_type;
    typedef Listener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Listener_ptr _duplicate (Listener_ptr obj);

    static void _tao_release (Listener_ptr obj);

    static Listener_ptr _narrow (::CORBA::Object_ptr obj);
    static Listener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Listener_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Listener (void);

    

    virtual ~Listener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Listener (const Listener &);

    void operator= (const Listener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Listener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_TOPICLISTENER__VAR_OUT_CH_)
#define _DDS_TOPICLISTENER__VAR_OUT_CH_

  class TopicListener;
  typedef TopicListener *TopicListener_ptr;

  typedef
    TAO_Objref_Var_T<
        TopicListener
      >
    TopicListener_var;
  
  typedef
    TAO_Objref_Out_T<
        TopicListener
      >
    TopicListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  TopicListener
    : public virtual ::DDS::Listener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef TopicListener_ptr _ptr_type;
    typedef TopicListener_var _var_type;
    typedef TopicListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TopicListener_ptr _duplicate (TopicListener_ptr obj);

    static void _tao_release (TopicListener_ptr obj);

    static TopicListener_ptr _narrow (::CORBA::Object_ptr obj);
    static TopicListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TopicListener_ptr _nil (void);

    /// @copydoc DDS::TopicListener::on_inconsistent_topic
    virtual void on_inconsistent_topic (
      ::DDS::Topic_ptr the_topic,
      const ::DDS::InconsistentTopicStatus & status) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TopicListener (void);

    

    virtual ~TopicListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TopicListener (const TopicListener &);

    void operator= (const TopicListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TopicListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_EXTTOPICLISTENER__VAR_OUT_CH_)
#define _DDS_EXTTOPICLISTENER__VAR_OUT_CH_

  class ExtTopicListener;
  typedef ExtTopicListener *ExtTopicListener_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtTopicListener
      >
    ExtTopicListener_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtTopicListener
      >
    ExtTopicListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ExtTopicListener
    : public virtual ::DDS::TopicListener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ExtTopicListener_ptr _ptr_type;
    typedef ExtTopicListener_var _var_type;
    typedef ExtTopicListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtTopicListener_ptr _duplicate (ExtTopicListener_ptr obj);

    static void _tao_release (ExtTopicListener_ptr obj);

    static ExtTopicListener_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtTopicListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtTopicListener_ptr _nil (void);

    /// @copydoc DDS::ExtTopicListener::on_all_data_disposed
    virtual void on_all_data_disposed (
      ::DDS::Topic_ptr the_topic) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ExtTopicListener (void);

    

    virtual ~ExtTopicListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtTopicListener (const ExtTopicListener &);

    void operator= (const ExtTopicListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ExtTopicListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DATAWRITERLISTENER__VAR_OUT_CH_)
#define _DDS_DATAWRITERLISTENER__VAR_OUT_CH_

  class DataWriterListener;
  typedef DataWriterListener *DataWriterListener_ptr;

  typedef
    TAO_Objref_Var_T<
        DataWriterListener
      >
    DataWriterListener_var;
  
  typedef
    TAO_Objref_Out_T<
        DataWriterListener
      >
    DataWriterListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DataWriterListener
    : public virtual ::DDS::Listener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DataWriterListener_ptr _ptr_type;
    typedef DataWriterListener_var _var_type;
    typedef DataWriterListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DataWriterListener_ptr _duplicate (DataWriterListener_ptr obj);

    static void _tao_release (DataWriterListener_ptr obj);

    static DataWriterListener_ptr _narrow (::CORBA::Object_ptr obj);
    static DataWriterListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataWriterListener_ptr _nil (void);

    /// @copydoc DDS::DataWriterListener::on_offered_deadline_missed
    virtual void on_offered_deadline_missed (
      ::DDS::DataWriter_ptr writer,
      const ::DDS::OfferedDeadlineMissedStatus & status) = 0;

    /// @copydoc DDS::DataWriterListener::on_offered_incompatible_qos
    virtual void on_offered_incompatible_qos (
      ::DDS::DataWriter_ptr writer,
      const ::DDS::OfferedIncompatibleQosStatus & status) = 0;

    /// @copydoc DDS::DataWriterListener::on_liveliness_lost
    virtual void on_liveliness_lost (
      ::DDS::DataWriter_ptr writer,
      const ::DDS::LivelinessLostStatus & status) = 0;

    /// @copydoc DDS::DataWriterListener::on_publication_matched
    virtual void on_publication_matched (
      ::DDS::DataWriter_ptr writer,
      const ::DDS::PublicationMatchedStatus & status) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataWriterListener (void);

    

    virtual ~DataWriterListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DataWriterListener (const DataWriterListener &);

    void operator= (const DataWriterListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataWriterListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_PUBLISHERLISTENER__VAR_OUT_CH_)
#define _DDS_PUBLISHERLISTENER__VAR_OUT_CH_

  class PublisherListener;
  typedef PublisherListener *PublisherListener_ptr;

  typedef
    TAO_Objref_Var_T<
        PublisherListener
      >
    PublisherListener_var;
  
  typedef
    TAO_Objref_Out_T<
        PublisherListener
      >
    PublisherListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  PublisherListener
    : public virtual ::DDS::DataWriterListener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef PublisherListener_ptr _ptr_type;
    typedef PublisherListener_var _var_type;
    typedef PublisherListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PublisherListener_ptr _duplicate (PublisherListener_ptr obj);

    static void _tao_release (PublisherListener_ptr obj);

    static PublisherListener_ptr _narrow (::CORBA::Object_ptr obj);
    static PublisherListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PublisherListener_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PublisherListener (void);

    

    virtual ~PublisherListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    PublisherListener (const PublisherListener &);

    void operator= (const PublisherListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_PublisherListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DATAREADERLISTENER__VAR_OUT_CH_)
#define _DDS_DATAREADERLISTENER__VAR_OUT_CH_

  class DataReaderListener;
  typedef DataReaderListener *DataReaderListener_ptr;

  typedef
    TAO_Objref_Var_T<
        DataReaderListener
      >
    DataReaderListener_var;
  
  typedef
    TAO_Objref_Out_T<
        DataReaderListener
      >
    DataReaderListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DataReaderListener
    : public virtual ::DDS::Listener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DataReaderListener_ptr _ptr_type;
    typedef DataReaderListener_var _var_type;
    typedef DataReaderListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DataReaderListener_ptr _duplicate (DataReaderListener_ptr obj);

    static void _tao_release (DataReaderListener_ptr obj);

    static DataReaderListener_ptr _narrow (::CORBA::Object_ptr obj);
    static DataReaderListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataReaderListener_ptr _nil (void);

    /// @copydoc DDS::DataReaderListener::on_requested_deadline_missed
    virtual void on_requested_deadline_missed (
      ::DDS::DataReader_ptr reader,
      const ::DDS::RequestedDeadlineMissedStatus & status) = 0;

    /// @copydoc DDS::DataReaderListener::on_requested_incompatible_qos
    virtual void on_requested_incompatible_qos (
      ::DDS::DataReader_ptr reader,
      const ::DDS::RequestedIncompatibleQosStatus & status) = 0;

    /// @copydoc DDS::DataReaderListener::on_sample_rejected
    virtual void on_sample_rejected (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SampleRejectedStatus & status) = 0;

    /// @copydoc DDS::DataReaderListener::on_liveliness_changed
    virtual void on_liveliness_changed (
      ::DDS::DataReader_ptr reader,
      const ::DDS::LivelinessChangedStatus & status) = 0;

    /// @copydoc DDS::DataReaderListener::on_data_available
    virtual void on_data_available (
      ::DDS::DataReader_ptr reader) = 0;

    /// @copydoc DDS::DataReaderListener::on_subscription_matched
    virtual void on_subscription_matched (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SubscriptionMatchedStatus & status) = 0;

    /// @copydoc DDS::DataReaderListener::on_sample_lost
    virtual void on_sample_lost (
      ::DDS::DataReader_ptr reader,
      const ::DDS::SampleLostStatus & status) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataReaderListener (void);

    

    virtual ~DataReaderListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DataReaderListener (const DataReaderListener &);

    void operator= (const DataReaderListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataReaderListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_SUBSCRIBERLISTENER__VAR_OUT_CH_)
#define _DDS_SUBSCRIBERLISTENER__VAR_OUT_CH_

  class SubscriberListener;
  typedef SubscriberListener *SubscriberListener_ptr;

  typedef
    TAO_Objref_Var_T<
        SubscriberListener
      >
    SubscriberListener_var;
  
  typedef
    TAO_Objref_Out_T<
        SubscriberListener
      >
    SubscriberListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  SubscriberListener
    : public virtual ::DDS::DataReaderListener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef SubscriberListener_ptr _ptr_type;
    typedef SubscriberListener_var _var_type;
    typedef SubscriberListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static SubscriberListener_ptr _duplicate (SubscriberListener_ptr obj);

    static void _tao_release (SubscriberListener_ptr obj);

    static SubscriberListener_ptr _narrow (::CORBA::Object_ptr obj);
    static SubscriberListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static SubscriberListener_ptr _nil (void);

    /// @copydoc DDS::SubscriberListener::on_data_on_readers
    virtual void on_data_on_readers (
      ::DDS::Subscriber_ptr subs) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    SubscriberListener (void);

    

    virtual ~SubscriberListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    SubscriberListener (const SubscriberListener &);

    void operator= (const SubscriberListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SubscriberListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DOMAINPARTICIPANTLISTENER__VAR_OUT_CH_)
#define _DDS_DOMAINPARTICIPANTLISTENER__VAR_OUT_CH_

  class DomainParticipantListener;
  typedef DomainParticipantListener *DomainParticipantListener_ptr;

  typedef
    TAO_Objref_Var_T<
        DomainParticipantListener
      >
    DomainParticipantListener_var;
  
  typedef
    TAO_Objref_Out_T<
        DomainParticipantListener
      >
    DomainParticipantListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DomainParticipantListener
    : public virtual ::DDS::TopicListener,
      public virtual ::DDS::PublisherListener,
      public virtual ::DDS::SubscriberListener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DomainParticipantListener_ptr _ptr_type;
    typedef DomainParticipantListener_var _var_type;
    typedef DomainParticipantListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DomainParticipantListener_ptr _duplicate (DomainParticipantListener_ptr obj);

    static void _tao_release (DomainParticipantListener_ptr obj);

    static DomainParticipantListener_ptr _narrow (::CORBA::Object_ptr obj);
    static DomainParticipantListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DomainParticipantListener_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DomainParticipantListener (void);

    

    virtual ~DomainParticipantListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DomainParticipantListener (const DomainParticipantListener &);

    void operator= (const DomainParticipantListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DomainParticipantListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_EXTDOMAINPARTICIPANTLISTENER__VAR_OUT_CH_)
#define _DDS_EXTDOMAINPARTICIPANTLISTENER__VAR_OUT_CH_

  class ExtDomainParticipantListener;
  typedef ExtDomainParticipantListener *ExtDomainParticipantListener_ptr;

  typedef
    TAO_Objref_Var_T<
        ExtDomainParticipantListener
      >
    ExtDomainParticipantListener_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtDomainParticipantListener
      >
    ExtDomainParticipantListener_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ExtDomainParticipantListener
    : public virtual ::DDS::ExtTopicListener,
      public virtual ::DDS::DomainParticipantListener
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ExtDomainParticipantListener_ptr _ptr_type;
    typedef ExtDomainParticipantListener_var _var_type;
    typedef ExtDomainParticipantListener_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ExtDomainParticipantListener_ptr _duplicate (ExtDomainParticipantListener_ptr obj);

    static void _tao_release (ExtDomainParticipantListener_ptr obj);

    static ExtDomainParticipantListener_ptr _narrow (::CORBA::Object_ptr obj);
    static ExtDomainParticipantListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ExtDomainParticipantListener_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ExtDomainParticipantListener (void);

    

    virtual ~ExtDomainParticipantListener (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ExtDomainParticipantListener (const ExtDomainParticipantListener &);

    void operator= (const ExtDomainParticipantListener &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ExtDomainParticipantListener;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_CONDITION__VAR_OUT_CH_)
#define _DDS_CONDITION__VAR_OUT_CH_

  class Condition;
  typedef Condition *Condition_ptr;

  typedef
    TAO_Objref_Var_T<
        Condition
      >
    Condition_var;
  
  typedef
    TAO_Objref_Out_T<
        Condition
      >
    Condition_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Condition
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Condition_ptr _ptr_type;
    typedef Condition_var _var_type;
    typedef Condition_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Condition_ptr _duplicate (Condition_ptr obj);

    static void _tao_release (Condition_ptr obj);

    static Condition_ptr _narrow (::CORBA::Object_ptr obj);
    static Condition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Condition_ptr _nil (void);

    /// @copydoc DDS::Condition::get_trigger_value
    virtual ::CORBA::Boolean get_trigger_value (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Condition (void);

    

    virtual ~Condition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Condition (const Condition &);

    void operator= (const Condition &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Condition;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_CONDITIONSEQ_CH_)
#define _DDS_CONDITIONSEQ_CH_

  class ConditionSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ConditionSeq
      >
    ConditionSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ConditionSeq
      >
    ConditionSeq_out;

  class  ConditionSeq
    : public
        ::TAO::unbounded_object_reference_sequence<
            Condition,
            Condition_var
          >
  {
  public:
    ConditionSeq (void);
    ConditionSeq ( ::CORBA::ULong max);
    ConditionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Condition_ptr* buffer,
      ::CORBA::Boolean release = false);
    ConditionSeq (const ConditionSeq &);
    virtual ~ConditionSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef ConditionSeq_var _var_type;
    typedef ConditionSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ConditionSeq;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_WAITSETINTERFACE__VAR_OUT_CH_)
#define _DDS_WAITSETINTERFACE__VAR_OUT_CH_

  class WaitSetInterface;
  typedef WaitSetInterface *WaitSetInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        WaitSetInterface
      >
    WaitSetInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        WaitSetInterface
      >
    WaitSetInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  WaitSetInterface
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef WaitSetInterface_ptr _ptr_type;
    typedef WaitSetInterface_var _var_type;
    typedef WaitSetInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static WaitSetInterface_ptr _duplicate (WaitSetInterface_ptr obj);

    static void _tao_release (WaitSetInterface_ptr obj);

    static WaitSetInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static WaitSetInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static WaitSetInterface_ptr _nil (void);

    /// @copydoc DDS::WaitSetInterface::wait
    virtual ::DDS::ReturnCode_t wait (
      ::DDS::ConditionSeq & active_conditions,
      const ::DDS::Duration_t & timeout) = 0;

    /// @copydoc DDS::WaitSetInterface::attach_condition
    virtual ::DDS::ReturnCode_t attach_condition (
      ::DDS::Condition_ptr cond) = 0;

    /// @copydoc DDS::WaitSetInterface::detach_condition
    virtual ::DDS::ReturnCode_t detach_condition (
      ::DDS::Condition_ptr cond) = 0;

    /// @copydoc DDS::WaitSetInterface::get_conditions
    virtual ::DDS::ReturnCode_t get_conditions (
      ::DDS::ConditionSeq & attached_conditions) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    WaitSetInterface (void);

    

    virtual ~WaitSetInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    WaitSetInterface (const WaitSetInterface &);

    void operator= (const WaitSetInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_WaitSetInterface;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_GUARDCONDITIONINTERFACE__VAR_OUT_CH_)
#define _DDS_GUARDCONDITIONINTERFACE__VAR_OUT_CH_

  class GuardConditionInterface;
  typedef GuardConditionInterface *GuardConditionInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        GuardConditionInterface
      >
    GuardConditionInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        GuardConditionInterface
      >
    GuardConditionInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  GuardConditionInterface
    : public virtual ::DDS::Condition
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef GuardConditionInterface_ptr _ptr_type;
    typedef GuardConditionInterface_var _var_type;
    typedef GuardConditionInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static GuardConditionInterface_ptr _duplicate (GuardConditionInterface_ptr obj);

    static void _tao_release (GuardConditionInterface_ptr obj);

    static GuardConditionInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static GuardConditionInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static GuardConditionInterface_ptr _nil (void);

    /// @copydoc DDS::GuardConditionInterface::set_trigger_value
    virtual ::DDS::ReturnCode_t set_trigger_value (
      ::CORBA::Boolean value) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    GuardConditionInterface (void);

    

    virtual ~GuardConditionInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    GuardConditionInterface (const GuardConditionInterface &);

    void operator= (const GuardConditionInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_GuardConditionInterface;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_STATUSCONDITION__VAR_OUT_CH_)
#define _DDS_STATUSCONDITION__VAR_OUT_CH_

  class StatusCondition;
  typedef StatusCondition *StatusCondition_ptr;

  typedef
    TAO_Objref_Var_T<
        StatusCondition
      >
    StatusCondition_var;
  
  typedef
    TAO_Objref_Out_T<
        StatusCondition
      >
    StatusCondition_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  StatusCondition
    : public virtual ::DDS::Condition
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef StatusCondition_ptr _ptr_type;
    typedef StatusCondition_var _var_type;
    typedef StatusCondition_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static StatusCondition_ptr _duplicate (StatusCondition_ptr obj);

    static void _tao_release (StatusCondition_ptr obj);

    static StatusCondition_ptr _narrow (::CORBA::Object_ptr obj);
    static StatusCondition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static StatusCondition_ptr _nil (void);

    /// @copydoc DDS::StatusCondition::get_enabled_statuses
    virtual ::DDS::StatusMask get_enabled_statuses (
      void) = 0;

    /// @copydoc DDS::StatusCondition::set_enabled_statuses
    virtual ::DDS::ReturnCode_t set_enabled_statuses (
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::StatusCondition::get_entity
    virtual ::DDS::Entity_ptr get_entity (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    StatusCondition (void);

    

    virtual ~StatusCondition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    StatusCondition (const StatusCondition &);

    void operator= (const StatusCondition &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_StatusCondition;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong SampleStateKind;
  typedef ::CORBA::ULong_out SampleStateKind_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleStateKind;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SAMPLESTATESEQ_CH_)
#define _DDS_SAMPLESTATESEQ_CH_

  class SampleStateSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        SampleStateSeq
      >
    SampleStateSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        SampleStateSeq
      >
    SampleStateSeq_out;

  class  SampleStateSeq
    : public
        ::TAO::unbounded_value_sequence<
            SampleStateKind
          >
  {
  public:
    SampleStateSeq (void);
    SampleStateSeq ( ::CORBA::ULong max);
    SampleStateSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer,
      ::CORBA::Boolean release = false);
    SampleStateSeq (const SampleStateSeq &);
    virtual ~SampleStateSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SampleStateSeq_var _var_type;
    typedef SampleStateSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleStateSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong READ_SAMPLE_STATE = 1U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NOT_READ_SAMPLE_STATE = 2U;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong SampleStateMask;
  typedef ::CORBA::ULong_out SampleStateMask_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleStateMask;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ANY_SAMPLE_STATE = 65535U;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong ViewStateKind;
  typedef ::CORBA::ULong_out ViewStateKind_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ViewStateKind;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_VIEWSTATESEQ_CH_)
#define _DDS_VIEWSTATESEQ_CH_

  class ViewStateSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        ViewStateSeq
      >
    ViewStateSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ViewStateSeq
      >
    ViewStateSeq_out;

  class  ViewStateSeq
    : public
        ::TAO::unbounded_value_sequence<
            ViewStateKind
          >
  {
  public:
    ViewStateSeq (void);
    ViewStateSeq ( ::CORBA::ULong max);
    ViewStateSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer,
      ::CORBA::Boolean release = false);
    ViewStateSeq (const ViewStateSeq &);
    virtual ~ViewStateSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef ViewStateSeq_var _var_type;
    typedef ViewStateSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ViewStateSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NEW_VIEW_STATE = 1U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NOT_NEW_VIEW_STATE = 2U;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong ViewStateMask;
  typedef ::CORBA::ULong_out ViewStateMask_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ViewStateMask;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ANY_VIEW_STATE = 65535U;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong InstanceStateKind;
  typedef ::CORBA::ULong_out InstanceStateKind_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstanceStateKind;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_INSTANCESTATESEQ_CH_)
#define _DDS_INSTANCESTATESEQ_CH_

  class InstanceStateSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        InstanceStateSeq
      >
    InstanceStateSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        InstanceStateSeq
      >
    InstanceStateSeq_out;

  class  InstanceStateSeq
    : public
        ::TAO::unbounded_value_sequence<
            InstanceStateKind
          >
  {
  public:
    InstanceStateSeq (void);
    InstanceStateSeq ( ::CORBA::ULong max);
    InstanceStateSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer,
      ::CORBA::Boolean release = false);
    InstanceStateSeq (const InstanceStateSeq &);
    virtual ~InstanceStateSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef InstanceStateSeq_var _var_type;
    typedef InstanceStateSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstanceStateSeq;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ALIVE_INSTANCE_STATE = 1U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NOT_ALIVE_DISPOSED_INSTANCE_STATE = 2U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NOT_ALIVE_NO_WRITERS_INSTANCE_STATE = 4U;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:370

  typedef ::CORBA::ULong InstanceStateMask;
  typedef ::CORBA::ULong_out InstanceStateMask_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_InstanceStateMask;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong ANY_INSTANCE_STATE = 65535U;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::ULong NOT_ALIVE_INSTANCE_STATE = 6U;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_READCONDITION__VAR_OUT_CH_)
#define _DDS_READCONDITION__VAR_OUT_CH_

  class ReadCondition;
  typedef ReadCondition *ReadCondition_ptr;

  typedef
    TAO_Objref_Var_T<
        ReadCondition
      >
    ReadCondition_var;
  
  typedef
    TAO_Objref_Out_T<
        ReadCondition
      >
    ReadCondition_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ReadCondition
    : public virtual ::DDS::Condition
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ReadCondition_ptr _ptr_type;
    typedef ReadCondition_var _var_type;
    typedef ReadCondition_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ReadCondition_ptr _duplicate (ReadCondition_ptr obj);

    static void _tao_release (ReadCondition_ptr obj);

    static ReadCondition_ptr _narrow (::CORBA::Object_ptr obj);
    static ReadCondition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ReadCondition_ptr _nil (void);

    /// @copydoc DDS::ReadCondition::get_sample_state_mask
    virtual ::DDS::SampleStateMask get_sample_state_mask (
      void) = 0;

    /// @copydoc DDS::ReadCondition::get_view_state_mask
    virtual ::DDS::ViewStateMask get_view_state_mask (
      void) = 0;

    /// @copydoc DDS::ReadCondition::get_instance_state_mask
    virtual ::DDS::InstanceStateMask get_instance_state_mask (
      void) = 0;

    /// @copydoc DDS::ReadCondition::get_datareader
    virtual ::DDS::DataReader_ptr get_datareader (
      void) = 0;

    /// @copydoc DDS::ReadCondition::get_datareaderview
    virtual ::DDS::DataReaderView_ptr get_datareaderview (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ReadCondition (void);

    

    virtual ~ReadCondition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ReadCondition (const ReadCondition &);

    void operator= (const ReadCondition &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ReadCondition;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_QUERYCONDITION__VAR_OUT_CH_)
#define _DDS_QUERYCONDITION__VAR_OUT_CH_

  class QueryCondition;
  typedef QueryCondition *QueryCondition_ptr;

  typedef
    TAO_Objref_Var_T<
        QueryCondition
      >
    QueryCondition_var;
  
  typedef
    TAO_Objref_Out_T<
        QueryCondition
      >
    QueryCondition_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  QueryCondition
    : public virtual ::DDS::ReadCondition
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef QueryCondition_ptr _ptr_type;
    typedef QueryCondition_var _var_type;
    typedef QueryCondition_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static QueryCondition_ptr _duplicate (QueryCondition_ptr obj);

    static void _tao_release (QueryCondition_ptr obj);

    static QueryCondition_ptr _narrow (::CORBA::Object_ptr obj);
    static QueryCondition_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static QueryCondition_ptr _nil (void);

    /// @copydoc DDS::QueryCondition::get_query_expression
    virtual char * get_query_expression (
      void) = 0;

    /// @copydoc DDS::QueryCondition::get_query_parameters
    virtual ::DDS::ReturnCode_t get_query_parameters (
      ::DDS::StringSeq & query_parameters) = 0;

    /// @copydoc DDS::QueryCondition::set_query_parameters
    virtual ::DDS::ReturnCode_t set_query_parameters (
      const ::DDS::StringSeq & query_parameters) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    QueryCondition (void);

    

    virtual ~QueryCondition (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    QueryCondition (const QueryCondition &);

    void operator= (const QueryCondition &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_QueryCondition;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const USERDATA_QOS_POLICY_NAME = "UserData";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const DURABILITY_QOS_POLICY_NAME = "Durability";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const PRESENTATION_QOS_POLICY_NAME = "Presentation";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const DEADLINE_QOS_POLICY_NAME = "Deadline";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const LATENCYBUDGET_QOS_POLICY_NAME = "LatencyBudget";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const OWNERSHIP_QOS_POLICY_NAME = "Ownership";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const OWNERSHIPSTRENGTH_QOS_POLICY_NAME = "OwnershipStrength";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const LIVELINESS_QOS_POLICY_NAME = "Liveliness";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const TIMEBASEDFILTER_QOS_POLICY_NAME = "TimeBasedFilter";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const PARTITION_QOS_POLICY_NAME = "Partition";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const RELIABILITY_QOS_POLICY_NAME = "Reliability";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const DESTINATIONORDER_QOS_POLICY_NAME = "DestinationOrder";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const HISTORY_QOS_POLICY_NAME = "History";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const RESOURCELIMITS_QOS_POLICY_NAME = "ResourceLimits";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const ENTITYFACTORY_QOS_POLICY_NAME = "EntityFactory";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const WRITERDATALIFECYCLE_QOS_POLICY_NAME = "WriterDataLifecycle";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const READERDATALIFECYCLE_QOS_POLICY_NAME = "ReaderDataLifecycle";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const TOPICDATA_QOS_POLICY_NAME = "TopicData";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const GROUPDATA_QOS_POLICY_NAME = "GroupData";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const TRANSPORTPRIORITY_QOS_POLICY_NAME = "TransportPriority";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const LIFESPAN_QOS_POLICY_NAME = "Lifespan";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const DURABILITYSERVICE_QOS_POLICY_NAME = "DurabilityService";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const SUBSCRIPTIONKEY_QOS_POLICY_NAME = "SubscriptionKey";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const VIEWKEY_QOS_POLICY_NAME = "ViewKey";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const READERLIFESPAN_QOS_POLICY_NAME = "ReaderLifespan";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const SHARE_QOS_POLICY_NAME = "Share";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const char *const SCHEDULING_QOS_POLICY_NAME = "Scheduling";

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long INVALID_QOS_POLICY_ID = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long USERDATA_QOS_POLICY_ID = 1;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DURABILITY_QOS_POLICY_ID = 2;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long PRESENTATION_QOS_POLICY_ID = 3;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DEADLINE_QOS_POLICY_ID = 4;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long LATENCYBUDGET_QOS_POLICY_ID = 5;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long OWNERSHIP_QOS_POLICY_ID = 6;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long OWNERSHIPSTRENGTH_QOS_POLICY_ID = 7;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long LIVELINESS_QOS_POLICY_ID = 8;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long TIMEBASEDFILTER_QOS_POLICY_ID = 9;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long PARTITION_QOS_POLICY_ID = 10;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RELIABILITY_QOS_POLICY_ID = 11;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DESTINATIONORDER_QOS_POLICY_ID = 12;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long HISTORY_QOS_POLICY_ID = 13;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long RESOURCELIMITS_QOS_POLICY_ID = 14;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long ENTITYFACTORY_QOS_POLICY_ID = 15;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long WRITERDATALIFECYCLE_QOS_POLICY_ID = 16;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long READERDATALIFECYCLE_QOS_POLICY_ID = 17;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long TOPICDATA_QOS_POLICY_ID = 18;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long GROUPDATA_QOS_POLICY_ID = 19;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long TRANSPORTPRIORITY_QOS_POLICY_ID = 20;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long LIFESPAN_QOS_POLICY_ID = 21;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long DURABILITYSERVICE_QOS_POLICY_ID = 22;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long SUBSCRIPTIONKEY_QOS_POLICY_ID = 23;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long VIEWKEY_QOS_POLICY_ID = 24;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long READERLIFESPAN_QOS_POLICY_ID = 25;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long SHARE_QOS_POLICY_ID = 26;

  // TAO_IDL - Generated from
  // be/be_visitor_constant/constant_ch.cpp:38

  const CORBA::Long SCHEDULING_QOS_POLICY_ID = 27;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Property;

  typedef
    ::TAO_Var_Var_T<
        Property
      >
    Property_var;

  typedef
    ::TAO_Out_T<
        Property
      >
    Property_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  Property
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Property_var _var_type;
    typedef Property_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager value;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Property;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  PropertyInterface
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef PropertyInterface_ptr _ptr_type;
    typedef PropertyInterface_var _var_type;
    typedef PropertyInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static PropertyInterface_ptr _duplicate (PropertyInterface_ptr obj);

    static void _tao_release (PropertyInterface_ptr obj);

    static PropertyInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static PropertyInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static PropertyInterface_ptr _nil (void);

    /// @copydoc DDS::PropertyInterface::set_property
    virtual ::DDS::ReturnCode_t set_property (
      const ::DDS::Property & a_property) = 0;

    /// @copydoc DDS::PropertyInterface::get_property
    virtual ::DDS::ReturnCode_t get_property (
      ::DDS::Property & a_property) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    PropertyInterface (void);

    

    virtual ~PropertyInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    PropertyInterface (const PropertyInterface &);

    void operator= (const PropertyInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_PropertyInterface;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Entity
    : public virtual ::DDS::PropertyInterface
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Entity_ptr _ptr_type;
    typedef Entity_var _var_type;
    typedef Entity_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Entity_ptr _duplicate (Entity_ptr obj);

    static void _tao_release (Entity_ptr obj);

    static Entity_ptr _narrow (::CORBA::Object_ptr obj);
    static Entity_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Entity_ptr _nil (void);

    /// @copydoc DDS::Entity::enable
    virtual ::DDS::ReturnCode_t enable (
      void) = 0;

    /// @copydoc DDS::Entity::get_statuscondition
    virtual ::DDS::StatusCondition_ptr get_statuscondition (
      void) = 0;

    /// @copydoc DDS::Entity::get_status_changes
    virtual ::DDS::StatusMask get_status_changes (
      void) = 0;

    /// @copydoc DDS::Entity::get_instance_handle
    virtual ::DDS::InstanceHandle_t get_instance_handle (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Entity (void);

    

    virtual ~Entity (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Entity (const Entity &);

    void operator= (const Entity &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Entity;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DOMAINPARTICIPANT__VAR_OUT_CH_)
#define _DDS_DOMAINPARTICIPANT__VAR_OUT_CH_

  class DomainParticipant;
  typedef DomainParticipant *DomainParticipant_ptr;

  typedef
    TAO_Objref_Var_T<
        DomainParticipant
      >
    DomainParticipant_var;
  
  typedef
    TAO_Objref_Out_T<
        DomainParticipant
      >
    DomainParticipant_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DomainParticipant
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DomainParticipant_ptr _ptr_type;
    typedef DomainParticipant_var _var_type;
    typedef DomainParticipant_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DomainParticipant_ptr _duplicate (DomainParticipant_ptr obj);

    static void _tao_release (DomainParticipant_ptr obj);

    static DomainParticipant_ptr _narrow (::CORBA::Object_ptr obj);
    static DomainParticipant_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DomainParticipant_ptr _nil (void);

    /// @copydoc DDS::DomainParticipant::create_publisher
    virtual ::DDS::Publisher_ptr create_publisher (
      const ::DDS::PublisherQos & qos,
      ::DDS::PublisherListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DomainParticipant::delete_publisher
    virtual ::DDS::ReturnCode_t delete_publisher (
      ::DDS::Publisher_ptr p) = 0;

    /// @copydoc DDS::DomainParticipant::create_subscriber
    virtual ::DDS::Subscriber_ptr create_subscriber (
      const ::DDS::SubscriberQos & qos,
      ::DDS::SubscriberListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DomainParticipant::delete_subscriber
    virtual ::DDS::ReturnCode_t delete_subscriber (
      ::DDS::Subscriber_ptr s) = 0;

    /// @copydoc DDS::DomainParticipant::get_builtin_subscriber
    virtual ::DDS::Subscriber_ptr get_builtin_subscriber (
      void) = 0;

    /// @copydoc DDS::DomainParticipant::create_topic
    virtual ::DDS::Topic_ptr create_topic (
      const char * topic_name,
      const char * type_name,
      const ::DDS::TopicQos & qos,
      ::DDS::TopicListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DomainParticipant::delete_topic
    virtual ::DDS::ReturnCode_t delete_topic (
      ::DDS::Topic_ptr a_topic) = 0;

    /// @copydoc DDS::DomainParticipant::find_topic
    virtual ::DDS::Topic_ptr find_topic (
      const char * topic_name,
      const ::DDS::Duration_t & timeout) = 0;

    /// @copydoc DDS::DomainParticipant::lookup_topicdescription
    virtual ::DDS::TopicDescription_ptr lookup_topicdescription (
      const char * name) = 0;

    /// @copydoc DDS::DomainParticipant::create_contentfilteredtopic
    virtual ::DDS::ContentFilteredTopic_ptr create_contentfilteredtopic (
      const char * name,
      ::DDS::Topic_ptr related_topic,
      const char * filter_expression,
      const ::DDS::StringSeq & expression_parameters) = 0;

    /// @copydoc DDS::DomainParticipant::delete_contentfilteredtopic
    virtual ::DDS::ReturnCode_t delete_contentfilteredtopic (
      ::DDS::ContentFilteredTopic_ptr a_contentfilteredtopic) = 0;

    /// @copydoc DDS::DomainParticipant::create_multitopic
    virtual ::DDS::MultiTopic_ptr create_multitopic (
      const char * name,
      const char * type_name,
      const char * subscription_expression,
      const ::DDS::StringSeq & expression_parameters) = 0;

    /// @copydoc DDS::DomainParticipant::delete_multitopic
    virtual ::DDS::ReturnCode_t delete_multitopic (
      ::DDS::MultiTopic_ptr a_multitopic) = 0;

    /// @copydoc DDS::DomainParticipant::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::DomainParticipant::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DomainParticipantQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DomainParticipantQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::DomainParticipantListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DomainParticipant::get_listener
    virtual ::DDS::DomainParticipantListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::DomainParticipant::ignore_participant
    virtual ::DDS::ReturnCode_t ignore_participant (
      ::DDS::InstanceHandle_t handle) = 0;

    /// @copydoc DDS::DomainParticipant::ignore_topic
    virtual ::DDS::ReturnCode_t ignore_topic (
      ::DDS::InstanceHandle_t handle) = 0;

    /// @copydoc DDS::DomainParticipant::ignore_publication
    virtual ::DDS::ReturnCode_t ignore_publication (
      ::DDS::InstanceHandle_t handle) = 0;

    /// @copydoc DDS::DomainParticipant::ignore_subscription
    virtual ::DDS::ReturnCode_t ignore_subscription (
      ::DDS::InstanceHandle_t handle) = 0;

    /// @copydoc DDS::DomainParticipant::get_domain_id
    virtual ::DDS::DomainId_t get_domain_id (
      void) = 0;

    /// @copydoc DDS::DomainParticipant::assert_liveliness
    virtual ::DDS::ReturnCode_t assert_liveliness (
      void) = 0;

    /// @copydoc DDS::DomainParticipant::set_default_publisher_qos
    virtual ::DDS::ReturnCode_t set_default_publisher_qos (
      const ::DDS::PublisherQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::get_default_publisher_qos
    virtual ::DDS::ReturnCode_t get_default_publisher_qos (
      ::DDS::PublisherQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::set_default_subscriber_qos
    virtual ::DDS::ReturnCode_t set_default_subscriber_qos (
      const ::DDS::SubscriberQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::get_default_subscriber_qos
    virtual ::DDS::ReturnCode_t get_default_subscriber_qos (
      ::DDS::SubscriberQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::set_default_topic_qos
    virtual ::DDS::ReturnCode_t set_default_topic_qos (
      const ::DDS::TopicQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::get_default_topic_qos
    virtual ::DDS::ReturnCode_t get_default_topic_qos (
      ::DDS::TopicQos & qos) = 0;

    /// @copydoc DDS::DomainParticipant::get_discovered_participants
    virtual ::DDS::ReturnCode_t get_discovered_participants (
      ::DDS::InstanceHandleSeq & participant_handles) = 0;

    /// @copydoc DDS::DomainParticipant::get_discovered_participant_data
    virtual ::DDS::ReturnCode_t get_discovered_participant_data (
      ::DDS::ParticipantBuiltinTopicData & participant_data,
      ::DDS::InstanceHandle_t participant_handle) = 0;

    /// @copydoc DDS::DomainParticipant::get_discovered_topics
    virtual ::DDS::ReturnCode_t get_discovered_topics (
      ::DDS::InstanceHandleSeq & topic_handles) = 0;

    /// @copydoc DDS::DomainParticipant::get_discovered_topic_data
    virtual ::DDS::ReturnCode_t get_discovered_topic_data (
      ::DDS::TopicBuiltinTopicData & topic_data,
      ::DDS::InstanceHandle_t topic_handle) = 0;

    /// @copydoc DDS::DomainParticipant::contains_entity
    virtual ::CORBA::Boolean contains_entity (
      ::DDS::InstanceHandle_t a_handle) = 0;

    /// @copydoc DDS::DomainParticipant::get_current_time
    virtual ::DDS::ReturnCode_t get_current_time (
      ::DDS::Time_t & current_time) = 0;

    /// @copydoc DDS::DomainParticipant::delete_historical_data
    virtual ::DDS::ReturnCode_t delete_historical_data (
      const char * partition_expression,
      const char * topic_expression) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DomainParticipant (void);

    

    virtual ~DomainParticipant (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DomainParticipant (const DomainParticipant &);

    void operator= (const DomainParticipant &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DomainParticipant;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DOMAIN__VAR_OUT_CH_)
#define _DDS_DOMAIN__VAR_OUT_CH_

  class Domain;
  typedef Domain *Domain_ptr;

  typedef
    TAO_Objref_Var_T<
        Domain
      >
    Domain_var;
  
  typedef
    TAO_Objref_Out_T<
        Domain
      >
    Domain_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Domain
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Domain_ptr _ptr_type;
    typedef Domain_var _var_type;
    typedef Domain_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Domain_ptr _duplicate (Domain_ptr obj);

    static void _tao_release (Domain_ptr obj);

    static Domain_ptr _narrow (::CORBA::Object_ptr obj);
    static Domain_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Domain_ptr _nil (void);

    /// @copydoc DDS::Domain::create_persistent_snapshot
    virtual ::DDS::ReturnCode_t create_persistent_snapshot (
      const char * partition_expression,
      const char * topic_expression,
      const char * URI) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Domain (void);

    

    virtual ~Domain (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Domain (const Domain &);

    void operator= (const Domain &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Domain;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_DOMAINPARTICIPANTFACTORYINTERFACE__VAR_OUT_CH_)
#define _DDS_DOMAINPARTICIPANTFACTORYINTERFACE__VAR_OUT_CH_

  class DomainParticipantFactoryInterface;
  typedef DomainParticipantFactoryInterface *DomainParticipantFactoryInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        DomainParticipantFactoryInterface
      >
    DomainParticipantFactoryInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        DomainParticipantFactoryInterface
      >
    DomainParticipantFactoryInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DomainParticipantFactoryInterface
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DomainParticipantFactoryInterface_ptr _ptr_type;
    typedef DomainParticipantFactoryInterface_var _var_type;
    typedef DomainParticipantFactoryInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DomainParticipantFactoryInterface_ptr _duplicate (DomainParticipantFactoryInterface_ptr obj);

    static void _tao_release (DomainParticipantFactoryInterface_ptr obj);

    static DomainParticipantFactoryInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static DomainParticipantFactoryInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DomainParticipantFactoryInterface_ptr _nil (void);

    /// @copydoc DDS::DomainParticipantFactoryInterface::create_participant
    virtual ::DDS::DomainParticipant_ptr create_participant (
      ::DDS::DomainId_t domain_id,
      const ::DDS::DomainParticipantQos & qos,
      ::DDS::DomainParticipantListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::delete_participant
    virtual ::DDS::ReturnCode_t delete_participant (
      ::DDS::DomainParticipant_ptr a_participant) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::lookup_participant
    virtual ::DDS::DomainParticipant_ptr lookup_participant (
      ::DDS::DomainId_t domainId) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::set_default_participant_qos
    virtual ::DDS::ReturnCode_t set_default_participant_qos (
      const ::DDS::DomainParticipantQos & qos) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::get_default_participant_qos
    virtual ::DDS::ReturnCode_t get_default_participant_qos (
      ::DDS::DomainParticipantQos & qos) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DomainParticipantFactoryQos & qos) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DomainParticipantFactoryQos & qos) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::lookup_domain
    virtual ::DDS::Domain_ptr lookup_domain (
      ::DDS::DomainId_t domainId) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::delete_domain
    virtual ::DDS::ReturnCode_t delete_domain (
      ::DDS::Domain_ptr a_domain) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::DomainParticipantFactoryInterface::detach_all_domains
    virtual ::DDS::ReturnCode_t detach_all_domains (
      ::CORBA::Boolean block_operations,
      ::CORBA::Boolean delete_entities) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DomainParticipantFactoryInterface (void);

    

    virtual ~DomainParticipantFactoryInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DomainParticipantFactoryInterface (const DomainParticipantFactoryInterface &);

    void operator= (const DomainParticipantFactoryInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DomainParticipantFactoryInterface;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_TYPESUPPORT__VAR_OUT_CH_)
#define _DDS_TYPESUPPORT__VAR_OUT_CH_

  class TypeSupport;
  typedef TypeSupport *TypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        TypeSupport
      >
    TypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        TypeSupport
      >
    TypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  TypeSupport
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef TypeSupport_ptr _ptr_type;
    typedef TypeSupport_var _var_type;
    typedef TypeSupport_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TypeSupport_ptr _duplicate (TypeSupport_ptr obj);

    static void _tao_release (TypeSupport_ptr obj);

    static TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TypeSupport_ptr _nil (void);

    /// @copydoc DDS::TypeSupport::register_type
    virtual ::DDS::ReturnCode_t register_type (
      ::DDS::DomainParticipant_ptr domain,
      const char * type_name) = 0;

    /// @copydoc DDS::TypeSupport::get_type_name
    virtual char * get_type_name (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TypeSupport (void);

    

    virtual ~TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypeSupport (const TypeSupport &);

    void operator= (const TypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TypeSupport;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  TopicDescription
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef TopicDescription_ptr _ptr_type;
    typedef TopicDescription_var _var_type;
    typedef TopicDescription_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static TopicDescription_ptr _duplicate (TopicDescription_ptr obj);

    static void _tao_release (TopicDescription_ptr obj);

    static TopicDescription_ptr _narrow (::CORBA::Object_ptr obj);
    static TopicDescription_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static TopicDescription_ptr _nil (void);

    /// @copydoc DDS::TopicDescription::get_name
    virtual char * get_name (
      void) = 0;

    /// @copydoc DDS::TopicDescription::get_type_name
    virtual char * get_type_name (
      void) = 0;

    /// @copydoc DDS::TopicDescription::get_participant
    virtual ::DDS::DomainParticipant_ptr get_participant (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    TopicDescription (void);

    

    virtual ~TopicDescription (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TopicDescription (const TopicDescription &);

    void operator= (const TopicDescription &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_TopicDescription;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Topic
    : public virtual ::DDS::TopicDescription,
      public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Topic_ptr _ptr_type;
    typedef Topic_var _var_type;
    typedef Topic_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Topic_ptr _duplicate (Topic_ptr obj);

    static void _tao_release (Topic_ptr obj);

    static Topic_ptr _narrow (::CORBA::Object_ptr obj);
    static Topic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Topic_ptr _nil (void);

    /// @copydoc DDS::Topic::get_inconsistent_topic_status
    virtual ::DDS::ReturnCode_t get_inconsistent_topic_status (
      ::DDS::InconsistentTopicStatus & a_status) = 0;

    /// @copydoc DDS::Topic::get_all_data_disposed_topic_status
    virtual ::DDS::ReturnCode_t get_all_data_disposed_topic_status (
      ::DDS::AllDataDisposedTopicStatus & a_status) = 0;

    /// @copydoc DDS::Topic::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::TopicQos & qos) = 0;

    /// @copydoc DDS::Topic::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::TopicQos & qos) = 0;

    /// @copydoc DDS::Topic::get_listener
    virtual ::DDS::TopicListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::Topic::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::TopicListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::Topic::dispose_all_data
    virtual ::DDS::ReturnCode_t dispose_all_data (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Topic (void);

    

    virtual ~Topic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Topic (const Topic &);

    void operator= (const Topic &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Topic;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ContentFilteredTopic
    : public virtual ::DDS::TopicDescription
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ContentFilteredTopic_ptr _ptr_type;
    typedef ContentFilteredTopic_var _var_type;
    typedef ContentFilteredTopic_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ContentFilteredTopic_ptr _duplicate (ContentFilteredTopic_ptr obj);

    static void _tao_release (ContentFilteredTopic_ptr obj);

    static ContentFilteredTopic_ptr _narrow (::CORBA::Object_ptr obj);
    static ContentFilteredTopic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ContentFilteredTopic_ptr _nil (void);

    /// @copydoc DDS::ContentFilteredTopic::get_filter_expression
    virtual char * get_filter_expression (
      void) = 0;

    /// @copydoc DDS::ContentFilteredTopic::get_expression_parameters
    virtual ::DDS::ReturnCode_t get_expression_parameters (
      ::DDS::StringSeq & expression_parameters) = 0;

    /// @copydoc DDS::ContentFilteredTopic::set_expression_parameters
    virtual ::DDS::ReturnCode_t set_expression_parameters (
      const ::DDS::StringSeq & expression_parameters) = 0;

    /// @copydoc DDS::ContentFilteredTopic::get_related_topic
    virtual ::DDS::Topic_ptr get_related_topic (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ContentFilteredTopic (void);

    

    virtual ~ContentFilteredTopic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ContentFilteredTopic (const ContentFilteredTopic &);

    void operator= (const ContentFilteredTopic &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ContentFilteredTopic;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  MultiTopic
    : public virtual ::DDS::TopicDescription
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef MultiTopic_ptr _ptr_type;
    typedef MultiTopic_var _var_type;
    typedef MultiTopic_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static MultiTopic_ptr _duplicate (MultiTopic_ptr obj);

    static void _tao_release (MultiTopic_ptr obj);

    static MultiTopic_ptr _narrow (::CORBA::Object_ptr obj);
    static MultiTopic_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static MultiTopic_ptr _nil (void);

    /// @copydoc DDS::MultiTopic::get_subscription_expression
    virtual char * get_subscription_expression (
      void) = 0;

    /// @copydoc DDS::MultiTopic::get_expression_parameters
    virtual ::DDS::ReturnCode_t get_expression_parameters (
      ::DDS::StringSeq & expression_parameters) = 0;

    /// @copydoc DDS::MultiTopic::set_expression_parameters
    virtual ::DDS::ReturnCode_t set_expression_parameters (
      const ::DDS::StringSeq & expression_parameters) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    MultiTopic (void);

    

    virtual ~MultiTopic (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    MultiTopic (const MultiTopic &);

    void operator= (const MultiTopic &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_MultiTopic;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Publisher
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Publisher_ptr _ptr_type;
    typedef Publisher_var _var_type;
    typedef Publisher_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Publisher_ptr _duplicate (Publisher_ptr obj);

    static void _tao_release (Publisher_ptr obj);

    static Publisher_ptr _narrow (::CORBA::Object_ptr obj);
    static Publisher_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Publisher_ptr _nil (void);

    /// @copydoc DDS::Publisher::create_datawriter
    virtual ::DDS::DataWriter_ptr create_datawriter (
      ::DDS::Topic_ptr a_topic,
      const ::DDS::DataWriterQos & qos,
      ::DDS::DataWriterListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::Publisher::delete_datawriter
    virtual ::DDS::ReturnCode_t delete_datawriter (
      ::DDS::DataWriter_ptr a_datawriter) = 0;

    /// @copydoc DDS::Publisher::lookup_datawriter
    virtual ::DDS::DataWriter_ptr lookup_datawriter (
      const char * topic_name) = 0;

    /// @copydoc DDS::Publisher::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::Publisher::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::PublisherQos & qos) = 0;

    /// @copydoc DDS::Publisher::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::PublisherQos & qos) = 0;

    /// @copydoc DDS::Publisher::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::PublisherListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::Publisher::get_listener
    virtual ::DDS::PublisherListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::Publisher::suspend_publications
    virtual ::DDS::ReturnCode_t suspend_publications (
      void) = 0;

    /// @copydoc DDS::Publisher::resume_publications
    virtual ::DDS::ReturnCode_t resume_publications (
      void) = 0;

    /// @copydoc DDS::Publisher::begin_coherent_changes
    virtual ::DDS::ReturnCode_t begin_coherent_changes (
      void) = 0;

    /// @copydoc DDS::Publisher::end_coherent_changes
    virtual ::DDS::ReturnCode_t end_coherent_changes (
      void) = 0;

    /// @copydoc DDS::Publisher::wait_for_acknowledgments
    virtual ::DDS::ReturnCode_t wait_for_acknowledgments (
      const ::DDS::Duration_t & max_wait) = 0;

    /// @copydoc DDS::Publisher::get_participant
    virtual ::DDS::DomainParticipant_ptr get_participant (
      void) = 0;

    /// @copydoc DDS::Publisher::set_default_datawriter_qos
    virtual ::DDS::ReturnCode_t set_default_datawriter_qos (
      const ::DDS::DataWriterQos & qos) = 0;

    /// @copydoc DDS::Publisher::get_default_datawriter_qos
    virtual ::DDS::ReturnCode_t get_default_datawriter_qos (
      ::DDS::DataWriterQos & qos) = 0;

    /// @copydoc DDS::Publisher::copy_from_topic_qos
    virtual ::DDS::ReturnCode_t copy_from_topic_qos (
      ::DDS::DataWriterQos & a_datawriter_qos,
      const ::DDS::TopicQos & a_topic_qos) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Publisher (void);

    

    virtual ~Publisher (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Publisher (const Publisher &);

    void operator= (const Publisher &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Publisher;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DataWriter
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DataWriter_ptr _ptr_type;
    typedef DataWriter_var _var_type;
    typedef DataWriter_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DataWriter_ptr _duplicate (DataWriter_ptr obj);

    static void _tao_release (DataWriter_ptr obj);

    static DataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static DataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataWriter_ptr _nil (void);

    /// @copydoc DDS::DataWriter::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DataWriterQos & qos) = 0;

    /// @copydoc DDS::DataWriter::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DataWriterQos & qos) = 0;

    /// @copydoc DDS::DataWriter::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::DataWriterListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DataWriter::get_listener
    virtual ::DDS::DataWriterListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::DataWriter::get_topic
    virtual ::DDS::Topic_ptr get_topic (
      void) = 0;

    /// @copydoc DDS::DataWriter::get_publisher
    virtual ::DDS::Publisher_ptr get_publisher (
      void) = 0;

    /// @copydoc DDS::DataWriter::wait_for_acknowledgments
    virtual ::DDS::ReturnCode_t wait_for_acknowledgments (
      const ::DDS::Duration_t & max_wait) = 0;

    /// @copydoc DDS::DataWriter::get_liveliness_lost_status
    virtual ::DDS::ReturnCode_t get_liveliness_lost_status (
      ::DDS::LivelinessLostStatus & status) = 0;

    /// @copydoc DDS::DataWriter::get_offered_deadline_missed_status
    virtual ::DDS::ReturnCode_t get_offered_deadline_missed_status (
      ::DDS::OfferedDeadlineMissedStatus & status) = 0;

    /// @copydoc DDS::DataWriter::get_offered_incompatible_qos_status
    virtual ::DDS::ReturnCode_t get_offered_incompatible_qos_status (
      ::DDS::OfferedIncompatibleQosStatus & status) = 0;

    /// @copydoc DDS::DataWriter::get_publication_matched_status
    virtual ::DDS::ReturnCode_t get_publication_matched_status (
      ::DDS::PublicationMatchedStatus & status) = 0;

    /// @copydoc DDS::DataWriter::assert_liveliness
    virtual ::DDS::ReturnCode_t assert_liveliness (
      void) = 0;

    /// @copydoc DDS::DataWriter::get_matched_subscriptions
    virtual ::DDS::ReturnCode_t get_matched_subscriptions (
      ::DDS::InstanceHandleSeq & subscription_handles) = 0;

    /// @copydoc DDS::DataWriter::get_matched_subscription_data
    virtual ::DDS::ReturnCode_t get_matched_subscription_data (
      ::DDS::SubscriptionBuiltinTopicData & subscription_data,
      ::DDS::InstanceHandle_t subscription_handle) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataWriter (void);

    

    virtual ~DataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DataWriter (const DataWriter &);

    void operator= (const DataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataWriter;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  Subscriber
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Subscriber_ptr _ptr_type;
    typedef Subscriber_var _var_type;
    typedef Subscriber_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Subscriber_ptr _duplicate (Subscriber_ptr obj);

    static void _tao_release (Subscriber_ptr obj);

    static Subscriber_ptr _narrow (::CORBA::Object_ptr obj);
    static Subscriber_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Subscriber_ptr _nil (void);

    /// @copydoc DDS::Subscriber::create_datareader
    virtual ::DDS::DataReader_ptr create_datareader (
      ::DDS::TopicDescription_ptr a_topic,
      const ::DDS::DataReaderQos & qos,
      ::DDS::DataReaderListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::Subscriber::delete_datareader
    virtual ::DDS::ReturnCode_t delete_datareader (
      ::DDS::DataReader_ptr a_datareader) = 0;

    /// @copydoc DDS::Subscriber::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::Subscriber::lookup_datareader
    virtual ::DDS::DataReader_ptr lookup_datareader (
      const char * topic_name) = 0;

    /// @copydoc DDS::Subscriber::get_datareaders
    virtual ::DDS::ReturnCode_t get_datareaders (
      ::DDS::DataReaderSeq & readers,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    /// @copydoc DDS::Subscriber::notify_datareaders
    virtual ::DDS::ReturnCode_t notify_datareaders (
      void) = 0;

    /// @copydoc DDS::Subscriber::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::SubscriberQos & qos) = 0;

    /// @copydoc DDS::Subscriber::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::SubscriberQos & qos) = 0;

    /// @copydoc DDS::Subscriber::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::SubscriberListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::Subscriber::get_listener
    virtual ::DDS::SubscriberListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::Subscriber::begin_access
    virtual ::DDS::ReturnCode_t begin_access (
      void) = 0;

    /// @copydoc DDS::Subscriber::end_access
    virtual ::DDS::ReturnCode_t end_access (
      void) = 0;

    /// @copydoc DDS::Subscriber::get_participant
    virtual ::DDS::DomainParticipant_ptr get_participant (
      void) = 0;

    /// @copydoc DDS::Subscriber::set_default_datareader_qos
    virtual ::DDS::ReturnCode_t set_default_datareader_qos (
      const ::DDS::DataReaderQos & qos) = 0;

    /// @copydoc DDS::Subscriber::get_default_datareader_qos
    virtual ::DDS::ReturnCode_t get_default_datareader_qos (
      ::DDS::DataReaderQos & qos) = 0;

    /// @copydoc DDS::Subscriber::copy_from_topic_qos
    virtual ::DDS::ReturnCode_t copy_from_topic_qos (
      ::DDS::DataReaderQos & a_datareader_qos,
      const ::DDS::TopicQos & a_topic_qos) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Subscriber (void);

    

    virtual ~Subscriber (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Subscriber (const Subscriber &);

    void operator= (const Subscriber &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_Subscriber;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DataReader
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DataReader_ptr _ptr_type;
    typedef DataReader_var _var_type;
    typedef DataReader_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DataReader_ptr _duplicate (DataReader_ptr obj);

    static void _tao_release (DataReader_ptr obj);

    static DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataReader_ptr _nil (void);

    /// @copydoc DDS::DataReader::create_readcondition
    virtual ::DDS::ReadCondition_ptr create_readcondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    /// @copydoc DDS::DataReader::create_querycondition
    virtual ::DDS::QueryCondition_ptr create_querycondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states,
      const char * query_expression,
      const ::DDS::StringSeq & query_parameters) = 0;

    /// @copydoc DDS::DataReader::delete_readcondition
    virtual ::DDS::ReturnCode_t delete_readcondition (
      ::DDS::ReadCondition_ptr a_condition) = 0;

    /// @copydoc DDS::DataReader::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::DataReader::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DataReaderQos & qos) = 0;

    /// @copydoc DDS::DataReader::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DataReaderQos & qos) = 0;

    /// @copydoc DDS::DataReader::set_listener
    virtual ::DDS::ReturnCode_t set_listener (
      ::DDS::DataReaderListener_ptr a_listener,
      ::DDS::StatusMask mask) = 0;

    /// @copydoc DDS::DataReader::get_listener
    virtual ::DDS::DataReaderListener_ptr get_listener (
      void) = 0;

    /// @copydoc DDS::DataReader::get_topicdescription
    virtual ::DDS::TopicDescription_ptr get_topicdescription (
      void) = 0;

    /// @copydoc DDS::DataReader::get_subscriber
    virtual ::DDS::Subscriber_ptr get_subscriber (
      void) = 0;

    /// @copydoc DDS::DataReader::get_sample_rejected_status
    virtual ::DDS::ReturnCode_t get_sample_rejected_status (
      ::DDS::SampleRejectedStatus & status) = 0;

    /// @copydoc DDS::DataReader::get_liveliness_changed_status
    virtual ::DDS::ReturnCode_t get_liveliness_changed_status (
      ::DDS::LivelinessChangedStatus & status) = 0;

    /// @copydoc DDS::DataReader::get_requested_deadline_missed_status
    virtual ::DDS::ReturnCode_t get_requested_deadline_missed_status (
      ::DDS::RequestedDeadlineMissedStatus & status) = 0;

    /// @copydoc DDS::DataReader::get_requested_incompatible_qos_status
    virtual ::DDS::ReturnCode_t get_requested_incompatible_qos_status (
      ::DDS::RequestedIncompatibleQosStatus & status) = 0;

    /// @copydoc DDS::DataReader::get_subscription_matched_status
    virtual ::DDS::ReturnCode_t get_subscription_matched_status (
      ::DDS::SubscriptionMatchedStatus & status) = 0;

    /// @copydoc DDS::DataReader::get_sample_lost_status
    virtual ::DDS::ReturnCode_t get_sample_lost_status (
      ::DDS::SampleLostStatus & status) = 0;

    /// @copydoc DDS::DataReader::wait_for_historical_data
    virtual ::DDS::ReturnCode_t wait_for_historical_data (
      const ::DDS::Duration_t & max_wait) = 0;

    /// @copydoc DDS::DataReader::wait_for_historical_data_w_condition
    virtual ::DDS::ReturnCode_t wait_for_historical_data_w_condition (
      const char * filter_expression,
      const ::DDS::StringSeq & filter_parameters,
      const ::DDS::Time_t & min_source_timestamp,
      const ::DDS::Time_t & max_source_timestamp,
      const ::DDS::ResourceLimitsQosPolicy & resource_limits,
      const ::DDS::Duration_t & max_wait) = 0;

    /// @copydoc DDS::DataReader::get_matched_publications
    virtual ::DDS::ReturnCode_t get_matched_publications (
      ::DDS::InstanceHandleSeq & publication_handles) = 0;

    /// @copydoc DDS::DataReader::get_matched_publication_data
    virtual ::DDS::ReturnCode_t get_matched_publication_data (
      ::DDS::PublicationBuiltinTopicData & publication_data,
      ::DDS::InstanceHandle_t publication_handle) = 0;

    /// @copydoc DDS::DataReader::create_view
    virtual ::DDS::DataReaderView_ptr create_view (
      const ::DDS::DataReaderViewQos & qos) = 0;

    /// @copydoc DDS::DataReader::delete_view
    virtual ::DDS::ReturnCode_t delete_view (
      ::DDS::DataReaderView_ptr a_view) = 0;

    /// @copydoc DDS::DataReader::set_default_datareaderview_qos
    virtual ::DDS::ReturnCode_t set_default_datareaderview_qos (
      const ::DDS::DataReaderViewQos & qos) = 0;

    /// @copydoc DDS::DataReader::get_default_datareaderview_qos
    virtual ::DDS::ReturnCode_t get_default_datareaderview_qos (
      ::DDS::DataReaderViewQos & qos) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataReader (void);

    

    virtual ~DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DataReader (const DataReader &);

    void operator= (const DataReader &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataReader;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct SampleInfo;

  typedef
    ::TAO_Fixed_Var_T<
        SampleInfo
      >
    SampleInfo_var;

  typedef
    SampleInfo &
    SampleInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct  SampleInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SampleInfo_var _var_type;
    typedef SampleInfo_out _out_type;

    static void _tao_any_destructor (void *);
    
    DDS::SampleStateKind sample_state;
    DDS::ViewStateKind view_state;
    DDS::InstanceStateKind instance_state;
    ::CORBA::Long disposed_generation_count;
    ::CORBA::Long no_writers_generation_count;
    ::CORBA::Long sample_rank;
    ::CORBA::Long generation_rank;
    ::CORBA::Long absolute_generation_rank;
    DDS::Time_t source_timestamp;
    DDS::InstanceHandle_t instance_handle;
    DDS::InstanceHandle_t publication_handle;
    ::CORBA::Boolean valid_data;
    DDS::Time_t reception_timestamp;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleInfo;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SAMPLEINFOSEQ_CH_)
#define _DDS_SAMPLEINFOSEQ_CH_

  class SampleInfoSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        SampleInfoSeq
      >
    SampleInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        SampleInfoSeq
      >
    SampleInfoSeq_out;

  class  SampleInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            SampleInfo
          >
  {
  public:
    SampleInfoSeq (void);
    SampleInfoSeq ( ::CORBA::ULong max);
    SampleInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SampleInfo* buffer,
      ::CORBA::Boolean release = false);
    SampleInfoSeq (const SampleInfoSeq &);
    virtual ~SampleInfoSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SampleInfoSeq_var _var_type;
    typedef SampleInfoSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_SampleInfoSeq;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_ERRORINFOINTERFACE__VAR_OUT_CH_)
#define _DDS_ERRORINFOINTERFACE__VAR_OUT_CH_

  class ErrorInfoInterface;
  typedef ErrorInfoInterface *ErrorInfoInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        ErrorInfoInterface
      >
    ErrorInfoInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        ErrorInfoInterface
      >
    ErrorInfoInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ErrorInfoInterface
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ErrorInfoInterface_ptr _ptr_type;
    typedef ErrorInfoInterface_var _var_type;
    typedef ErrorInfoInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static ErrorInfoInterface_ptr _duplicate (ErrorInfoInterface_ptr obj);

    static void _tao_release (ErrorInfoInterface_ptr obj);

    static ErrorInfoInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static ErrorInfoInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ErrorInfoInterface_ptr _nil (void);

    /// @copydoc DDS::ErrorInfoInterface::update
    virtual ::DDS::ReturnCode_t update (
      void) = 0;

    /// @copydoc DDS::ErrorInfoInterface::get_code
    virtual ::DDS::ReturnCode_t get_code (
      ::DDS::ReturnCode_t & code) = 0;

    /// @copydoc DDS::ErrorInfoInterface::get_message
    virtual ::DDS::ReturnCode_t get_message (
      char *& message) = 0;

    /// @copydoc DDS::ErrorInfoInterface::get_location
    virtual ::DDS::ReturnCode_t get_location (
      char *& location) = 0;

    /// @copydoc DDS::ErrorInfoInterface::get_source_line
    virtual ::DDS::ReturnCode_t get_source_line (
      char *& source_line) = 0;

    /// @copydoc DDS::ErrorInfoInterface::get_stack_trace
    virtual ::DDS::ReturnCode_t get_stack_trace (
      char *& stack_trace) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ErrorInfoInterface (void);

    

    virtual ~ErrorInfoInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ErrorInfoInterface (const ErrorInfoInterface &);

    void operator= (const ErrorInfoInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_ErrorInfoInterface;

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  DataReaderView
    : public virtual ::DDS::Entity
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef DataReaderView_ptr _ptr_type;
    typedef DataReaderView_var _var_type;
    typedef DataReaderView_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static DataReaderView_ptr _duplicate (DataReaderView_ptr obj);

    static void _tao_release (DataReaderView_ptr obj);

    static DataReaderView_ptr _narrow (::CORBA::Object_ptr obj);
    static DataReaderView_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static DataReaderView_ptr _nil (void);

    /// @copydoc DDS::DataReaderView::create_readcondition
    virtual ::DDS::ReadCondition_ptr create_readcondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    /// @copydoc DDS::DataReaderView::create_querycondition
    virtual ::DDS::QueryCondition_ptr create_querycondition (
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states,
      const char * query_expression,
      const ::DDS::StringSeq & query_parameters) = 0;

    /// @copydoc DDS::DataReaderView::delete_readcondition
    virtual ::DDS::ReturnCode_t delete_readcondition (
      ::DDS::ReadCondition_ptr a_condition) = 0;

    /// @copydoc DDS::DataReaderView::delete_contained_entities
    virtual ::DDS::ReturnCode_t delete_contained_entities (
      void) = 0;

    /// @copydoc DDS::DataReaderView::set_qos
    virtual ::DDS::ReturnCode_t set_qos (
      const ::DDS::DataReaderViewQos & qos) = 0;

    /// @copydoc DDS::DataReaderView::get_qos
    virtual ::DDS::ReturnCode_t get_qos (
      ::DDS::DataReaderViewQos & qos) = 0;

    /// @copydoc DDS::DataReaderView::get_datareader
    virtual ::DDS::DataReader_ptr get_datareader (
      void) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    DataReaderView (void);

    

    virtual ~DataReaderView (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    DataReaderView (const DataReaderView &);

    void operator= (const DataReaderView &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_DataReaderView;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

#if !defined (_DDS_QOSPROVIDERINTERFACE__VAR_OUT_CH_)
#define _DDS_QOSPROVIDERINTERFACE__VAR_OUT_CH_

  class QosProviderInterface;
  typedef QosProviderInterface *QosProviderInterface_ptr;

  typedef
    TAO_Objref_Var_T<
        QosProviderInterface
      >
    QosProviderInterface_var;
  
  typedef
    TAO_Objref_Out_T<
        QosProviderInterface
      >
    QosProviderInterface_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  QosProviderInterface
    : public virtual ::CORBA::Object
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef QosProviderInterface_ptr _ptr_type;
    typedef QosProviderInterface_var _var_type;
    typedef QosProviderInterface_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static QosProviderInterface_ptr _duplicate (QosProviderInterface_ptr obj);

    static void _tao_release (QosProviderInterface_ptr obj);

    static QosProviderInterface_ptr _narrow (::CORBA::Object_ptr obj);
    static QosProviderInterface_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static QosProviderInterface_ptr _nil (void);

    /// @copydoc DDS::QosProviderInterface::get_participant_qos
    virtual ::DDS::ReturnCode_t get_participant_qos (
      ::DDS::DomainParticipantQos & a_participant_qos,
      const char * id) = 0;

    /// @copydoc DDS::QosProviderInterface::get_topic_qos
    virtual ::DDS::ReturnCode_t get_topic_qos (
      ::DDS::TopicQos & a_topic_qos,
      const char * id) = 0;

    /// @copydoc DDS::QosProviderInterface::get_subscriber_qos
    virtual ::DDS::ReturnCode_t get_subscriber_qos (
      ::DDS::SubscriberQos & a_subscriber_qos,
      const char * id) = 0;

    /// @copydoc DDS::QosProviderInterface::get_datareader_qos
    virtual ::DDS::ReturnCode_t get_datareader_qos (
      ::DDS::DataReaderQos & a_datareader_qos,
      const char * id) = 0;

    /// @copydoc DDS::QosProviderInterface::get_publisher_qos
    virtual ::DDS::ReturnCode_t get_publisher_qos (
      ::DDS::PublisherQos & a_publisher_qos,
      const char * id) = 0;

    /// @copydoc DDS::QosProviderInterface::get_datawriter_qos
    virtual ::DDS::ReturnCode_t get_datawriter_qos (
      ::DDS::DataWriterQos & a_datawriter_qos,
      const char * id) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    QosProviderInterface (void);

    

    virtual ~QosProviderInterface (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    QosProviderInterface (const QosProviderInterface &);

    void operator= (const QosProviderInterface &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_QosProviderInterface;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module DDS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::InstanceHandleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::InstanceHandleSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::InconsistentTopicStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::InconsistentTopicStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::AllDataDisposedTopicStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::AllDataDisposedTopicStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::SampleLostStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::SampleLostStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:898

  template<>
  class Arg_Traits< ::DDS::SampleRejectedStatusKind>
    : public
        Basic_Arg_Traits_T<
            ::DDS::SampleRejectedStatusKind,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::SampleRejectedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::SampleRejectedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::LivelinessLostStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::LivelinessLostStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::LivelinessChangedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::LivelinessChangedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::OfferedDeadlineMissedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::OfferedDeadlineMissedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::RequestedDeadlineMissedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::RequestedDeadlineMissedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::QosPolicyCount>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::QosPolicyCount,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::QosPolicyCountSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::QosPolicyCountSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::OfferedIncompatibleQosStatus>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::OfferedIncompatibleQosStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::RequestedIncompatibleQosStatus>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::RequestedIncompatibleQosStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::PublicationMatchedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::PublicationMatchedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::SubscriptionMatchedStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::SubscriptionMatchedStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::ObjSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::ObjSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::TopicSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::TopicSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::DataReaderSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::DataReaderSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::ConditionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::ConditionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::SampleStateSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::SampleStateSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::ViewStateSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::ViewStateSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::InstanceStateSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::InstanceStateSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::Property>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Property,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:941

  template<>
  class Arg_Traits< ::DDS::SampleInfo>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::SampleInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:679

  template<>
  class Arg_Traits< ::DDS::SampleInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::SampleInfoSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDS_LISTENER__TRAITS_)
#define _DDS_LISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Listener>
  {
    static ::DDS::Listener_ptr duplicate (
        ::DDS::Listener_ptr p);
    static void release (
        ::DDS::Listener_ptr p);
    static ::DDS::Listener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Listener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPICLISTENER__TRAITS_)
#define _DDS_TOPICLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::TopicListener>
  {
    static ::DDS::TopicListener_ptr duplicate (
        ::DDS::TopicListener_ptr p);
    static void release (
        ::DDS::TopicListener_ptr p);
    static ::DDS::TopicListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TopicListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_EXTTOPICLISTENER__TRAITS_)
#define _DDS_EXTTOPICLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::ExtTopicListener>
  {
    static ::DDS::ExtTopicListener_ptr duplicate (
        ::DDS::ExtTopicListener_ptr p);
    static void release (
        ::DDS::ExtTopicListener_ptr p);
    static ::DDS::ExtTopicListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ExtTopicListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAWRITERLISTENER__TRAITS_)
#define _DDS_DATAWRITERLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DataWriterListener>
  {
    static ::DDS::DataWriterListener_ptr duplicate (
        ::DDS::DataWriterListener_ptr p);
    static void release (
        ::DDS::DataWriterListener_ptr p);
    static ::DDS::DataWriterListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataWriterListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_PUBLISHERLISTENER__TRAITS_)
#define _DDS_PUBLISHERLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::PublisherListener>
  {
    static ::DDS::PublisherListener_ptr duplicate (
        ::DDS::PublisherListener_ptr p);
    static void release (
        ::DDS::PublisherListener_ptr p);
    static ::DDS::PublisherListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::PublisherListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAREADERLISTENER__TRAITS_)
#define _DDS_DATAREADERLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DataReaderListener>
  {
    static ::DDS::DataReaderListener_ptr duplicate (
        ::DDS::DataReaderListener_ptr p);
    static void release (
        ::DDS::DataReaderListener_ptr p);
    static ::DDS::DataReaderListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataReaderListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SUBSCRIBERLISTENER__TRAITS_)
#define _DDS_SUBSCRIBERLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::SubscriberListener>
  {
    static ::DDS::SubscriberListener_ptr duplicate (
        ::DDS::SubscriberListener_ptr p);
    static void release (
        ::DDS::SubscriberListener_ptr p);
    static ::DDS::SubscriberListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::SubscriberListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DOMAINPARTICIPANTLISTENER__TRAITS_)
#define _DDS_DOMAINPARTICIPANTLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DomainParticipantListener>
  {
    static ::DDS::DomainParticipantListener_ptr duplicate (
        ::DDS::DomainParticipantListener_ptr p);
    static void release (
        ::DDS::DomainParticipantListener_ptr p);
    static ::DDS::DomainParticipantListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DomainParticipantListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_EXTDOMAINPARTICIPANTLISTENER__TRAITS_)
#define _DDS_EXTDOMAINPARTICIPANTLISTENER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::ExtDomainParticipantListener>
  {
    static ::DDS::ExtDomainParticipantListener_ptr duplicate (
        ::DDS::ExtDomainParticipantListener_ptr p);
    static void release (
        ::DDS::ExtDomainParticipantListener_ptr p);
    static ::DDS::ExtDomainParticipantListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ExtDomainParticipantListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_CONDITION__TRAITS_)
#define _DDS_CONDITION__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Condition>
  {
    static ::DDS::Condition_ptr duplicate (
        ::DDS::Condition_ptr p);
    static void release (
        ::DDS::Condition_ptr p);
    static ::DDS::Condition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Condition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_WAITSETINTERFACE__TRAITS_)
#define _DDS_WAITSETINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::WaitSetInterface>
  {
    static ::DDS::WaitSetInterface_ptr duplicate (
        ::DDS::WaitSetInterface_ptr p);
    static void release (
        ::DDS::WaitSetInterface_ptr p);
    static ::DDS::WaitSetInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::WaitSetInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_GUARDCONDITIONINTERFACE__TRAITS_)
#define _DDS_GUARDCONDITIONINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::GuardConditionInterface>
  {
    static ::DDS::GuardConditionInterface_ptr duplicate (
        ::DDS::GuardConditionInterface_ptr p);
    static void release (
        ::DDS::GuardConditionInterface_ptr p);
    static ::DDS::GuardConditionInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::GuardConditionInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_STATUSCONDITION__TRAITS_)
#define _DDS_STATUSCONDITION__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::StatusCondition>
  {
    static ::DDS::StatusCondition_ptr duplicate (
        ::DDS::StatusCondition_ptr p);
    static void release (
        ::DDS::StatusCondition_ptr p);
    static ::DDS::StatusCondition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::StatusCondition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_READCONDITION__TRAITS_)
#define _DDS_READCONDITION__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::ReadCondition>
  {
    static ::DDS::ReadCondition_ptr duplicate (
        ::DDS::ReadCondition_ptr p);
    static void release (
        ::DDS::ReadCondition_ptr p);
    static ::DDS::ReadCondition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ReadCondition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_QUERYCONDITION__TRAITS_)
#define _DDS_QUERYCONDITION__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::QueryCondition>
  {
    static ::DDS::QueryCondition_ptr duplicate (
        ::DDS::QueryCondition_ptr p);
    static void release (
        ::DDS::QueryCondition_ptr p);
    static ::DDS::QueryCondition_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::QueryCondition_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_PROPERTYINTERFACE__TRAITS_)
#define _DDS_PROPERTYINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::PropertyInterface>
  {
    static ::DDS::PropertyInterface_ptr duplicate (
        ::DDS::PropertyInterface_ptr p);
    static void release (
        ::DDS::PropertyInterface_ptr p);
    static ::DDS::PropertyInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::PropertyInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_ENTITY__TRAITS_)
#define _DDS_ENTITY__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Entity>
  {
    static ::DDS::Entity_ptr duplicate (
        ::DDS::Entity_ptr p);
    static void release (
        ::DDS::Entity_ptr p);
    static ::DDS::Entity_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Entity_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DOMAINPARTICIPANT__TRAITS_)
#define _DDS_DOMAINPARTICIPANT__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DomainParticipant>
  {
    static ::DDS::DomainParticipant_ptr duplicate (
        ::DDS::DomainParticipant_ptr p);
    static void release (
        ::DDS::DomainParticipant_ptr p);
    static ::DDS::DomainParticipant_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DomainParticipant_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DOMAIN__TRAITS_)
#define _DDS_DOMAIN__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Domain>
  {
    static ::DDS::Domain_ptr duplicate (
        ::DDS::Domain_ptr p);
    static void release (
        ::DDS::Domain_ptr p);
    static ::DDS::Domain_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Domain_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DOMAINPARTICIPANTFACTORYINTERFACE__TRAITS_)
#define _DDS_DOMAINPARTICIPANTFACTORYINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DomainParticipantFactoryInterface>
  {
    static ::DDS::DomainParticipantFactoryInterface_ptr duplicate (
        ::DDS::DomainParticipantFactoryInterface_ptr p);
    static void release (
        ::DDS::DomainParticipantFactoryInterface_ptr p);
    static ::DDS::DomainParticipantFactoryInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DomainParticipantFactoryInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TYPESUPPORT__TRAITS_)
#define _DDS_TYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::TypeSupport>
  {
    static ::DDS::TypeSupport_ptr duplicate (
        ::DDS::TypeSupport_ptr p);
    static void release (
        ::DDS::TypeSupport_ptr p);
    static ::DDS::TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPICDESCRIPTION__TRAITS_)
#define _DDS_TOPICDESCRIPTION__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::TopicDescription>
  {
    static ::DDS::TopicDescription_ptr duplicate (
        ::DDS::TopicDescription_ptr p);
    static void release (
        ::DDS::TopicDescription_ptr p);
    static ::DDS::TopicDescription_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TopicDescription_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TOPIC__TRAITS_)
#define _DDS_TOPIC__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Topic>
  {
    static ::DDS::Topic_ptr duplicate (
        ::DDS::Topic_ptr p);
    static void release (
        ::DDS::Topic_ptr p);
    static ::DDS::Topic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Topic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_CONTENTFILTEREDTOPIC__TRAITS_)
#define _DDS_CONTENTFILTEREDTOPIC__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::ContentFilteredTopic>
  {
    static ::DDS::ContentFilteredTopic_ptr duplicate (
        ::DDS::ContentFilteredTopic_ptr p);
    static void release (
        ::DDS::ContentFilteredTopic_ptr p);
    static ::DDS::ContentFilteredTopic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ContentFilteredTopic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_MULTITOPIC__TRAITS_)
#define _DDS_MULTITOPIC__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::MultiTopic>
  {
    static ::DDS::MultiTopic_ptr duplicate (
        ::DDS::MultiTopic_ptr p);
    static void release (
        ::DDS::MultiTopic_ptr p);
    static ::DDS::MultiTopic_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::MultiTopic_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_PUBLISHER__TRAITS_)
#define _DDS_PUBLISHER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Publisher>
  {
    static ::DDS::Publisher_ptr duplicate (
        ::DDS::Publisher_ptr p);
    static void release (
        ::DDS::Publisher_ptr p);
    static ::DDS::Publisher_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Publisher_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAWRITER__TRAITS_)
#define _DDS_DATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DataWriter>
  {
    static ::DDS::DataWriter_ptr duplicate (
        ::DDS::DataWriter_ptr p);
    static void release (
        ::DDS::DataWriter_ptr p);
    static ::DDS::DataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SUBSCRIBER__TRAITS_)
#define _DDS_SUBSCRIBER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::Subscriber>
  {
    static ::DDS::Subscriber_ptr duplicate (
        ::DDS::Subscriber_ptr p);
    static void release (
        ::DDS::Subscriber_ptr p);
    static ::DDS::Subscriber_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Subscriber_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAREADER__TRAITS_)
#define _DDS_DATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DataReader>
  {
    static ::DDS::DataReader_ptr duplicate (
        ::DDS::DataReader_ptr p);
    static void release (
        ::DDS::DataReader_ptr p);
    static ::DDS::DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_ERRORINFOINTERFACE__TRAITS_)
#define _DDS_ERRORINFOINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::ErrorInfoInterface>
  {
    static ::DDS::ErrorInfoInterface_ptr duplicate (
        ::DDS::ErrorInfoInterface_ptr p);
    static void release (
        ::DDS::ErrorInfoInterface_ptr p);
    static ::DDS::ErrorInfoInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::ErrorInfoInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DATAREADERVIEW__TRAITS_)
#define _DDS_DATAREADERVIEW__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::DataReaderView>
  {
    static ::DDS::DataReaderView_ptr duplicate (
        ::DDS::DataReaderView_ptr p);
    static void release (
        ::DDS::DataReaderView_ptr p);
    static ::DDS::DataReaderView_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DataReaderView_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_QOSPROVIDERINTERFACE__TRAITS_)
#define _DDS_QOSPROVIDERINTERFACE__TRAITS_

  template<>
  struct  Objref_Traits< ::DDS::QosProviderInterface>
  {
    static ::DDS::QosProviderInterface_ptr duplicate (
        ::DDS::QosProviderInterface_ptr p);
    static void release (
        ::DDS::QosProviderInterface_ptr p);
    static ::DDS::QosProviderInterface_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::QosProviderInterface_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::InstanceHandleSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::InstanceHandleSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::InstanceHandleSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::InstanceHandleSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::InstanceHandleSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::InstanceHandleSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::InstanceHandleSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::InstanceHandleSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::InconsistentTopicStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::InconsistentTopicStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::InconsistentTopicStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::InconsistentTopicStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::InconsistentTopicStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::InconsistentTopicStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::InconsistentTopicStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::InconsistentTopicStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::AllDataDisposedTopicStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::AllDataDisposedTopicStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::AllDataDisposedTopicStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::AllDataDisposedTopicStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::AllDataDisposedTopicStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::AllDataDisposedTopicStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::AllDataDisposedTopicStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::AllDataDisposedTopicStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::SampleLostStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::SampleLostStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleLostStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SampleLostStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::SampleLostStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::SampleLostStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleLostStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SampleLostStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:39

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
  

   void operator<<= (::CORBA::Any &, ::DDS::SampleRejectedStatusKind);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleRejectedStatusKind &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, DDS::SampleRejectedStatusKind);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleRejectedStatusKind &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::SampleRejectedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::SampleRejectedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleRejectedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SampleRejectedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::SampleRejectedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::SampleRejectedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleRejectedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SampleRejectedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::LivelinessLostStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::LivelinessLostStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::LivelinessLostStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::LivelinessLostStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::LivelinessLostStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::LivelinessLostStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::LivelinessLostStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::LivelinessLostStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::LivelinessChangedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::LivelinessChangedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::LivelinessChangedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::LivelinessChangedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::LivelinessChangedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::LivelinessChangedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::LivelinessChangedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::LivelinessChangedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::OfferedDeadlineMissedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::OfferedDeadlineMissedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::OfferedDeadlineMissedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::OfferedDeadlineMissedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::OfferedDeadlineMissedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::OfferedDeadlineMissedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::OfferedDeadlineMissedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::OfferedDeadlineMissedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::RequestedDeadlineMissedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::RequestedDeadlineMissedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::RequestedDeadlineMissedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::RequestedDeadlineMissedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::RequestedDeadlineMissedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::RequestedDeadlineMissedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::RequestedDeadlineMissedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::RequestedDeadlineMissedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::QosPolicyCount &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::QosPolicyCount*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::QosPolicyCount *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::QosPolicyCount *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::QosPolicyCount &); // copying version
 void operator<<= (::CORBA::Any &, DDS::QosPolicyCount*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::QosPolicyCount *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::QosPolicyCount *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::QosPolicyCountSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::QosPolicyCountSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::QosPolicyCountSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::QosPolicyCountSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::QosPolicyCountSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::QosPolicyCountSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::QosPolicyCountSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::QosPolicyCountSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::OfferedIncompatibleQosStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::OfferedIncompatibleQosStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::OfferedIncompatibleQosStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::OfferedIncompatibleQosStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::OfferedIncompatibleQosStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::OfferedIncompatibleQosStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::OfferedIncompatibleQosStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::OfferedIncompatibleQosStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::RequestedIncompatibleQosStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::RequestedIncompatibleQosStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::RequestedIncompatibleQosStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::RequestedIncompatibleQosStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::RequestedIncompatibleQosStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::RequestedIncompatibleQosStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::RequestedIncompatibleQosStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::RequestedIncompatibleQosStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::PublicationMatchedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::PublicationMatchedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::PublicationMatchedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::PublicationMatchedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::PublicationMatchedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::PublicationMatchedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::PublicationMatchedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::PublicationMatchedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::SubscriptionMatchedStatus &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::SubscriptionMatchedStatus*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SubscriptionMatchedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SubscriptionMatchedStatus *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::SubscriptionMatchedStatus &); // copying version
 void operator<<= (::CORBA::Any &, DDS::SubscriptionMatchedStatus*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SubscriptionMatchedStatus *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SubscriptionMatchedStatus *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::ObjSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::ObjSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::ObjSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::ObjSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::ObjSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::ObjSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ObjSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::ObjSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::TopicSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::TopicSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::TopicSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::TopicSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::TopicSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::TopicSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::TopicSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::TopicSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::DataReaderSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::DataReaderSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::DataReaderSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::DataReaderSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::DataReaderSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::DataReaderSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataReaderSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::DataReaderSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Listener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Listener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Listener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Listener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Listener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Listener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, TopicListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, TopicListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TopicListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::TopicListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::TopicListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::TopicListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, ExtTopicListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, ExtTopicListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtTopicListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::ExtTopicListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::ExtTopicListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ExtTopicListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DataWriterListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DataWriterListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DataWriterListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DataWriterListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DataWriterListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataWriterListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, PublisherListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, PublisherListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PublisherListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::PublisherListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::PublisherListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::PublisherListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DataReaderListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DataReaderListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DataReaderListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DataReaderListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DataReaderListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataReaderListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, SubscriberListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, SubscriberListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, SubscriberListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::SubscriberListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::SubscriberListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SubscriberListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DomainParticipantListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DomainParticipantListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DomainParticipantListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DomainParticipantListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DomainParticipantListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DomainParticipantListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, ExtDomainParticipantListener_ptr); // copying
   void operator<<= ( ::CORBA::Any &, ExtDomainParticipantListener_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ExtDomainParticipantListener_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::ExtDomainParticipantListener_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::ExtDomainParticipantListener_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ExtDomainParticipantListener_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Condition_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Condition_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Condition_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Condition_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Condition_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Condition_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::ConditionSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::ConditionSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::ConditionSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::ConditionSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::ConditionSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::ConditionSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ConditionSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::ConditionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, WaitSetInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, WaitSetInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, WaitSetInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::WaitSetInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::WaitSetInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::WaitSetInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, GuardConditionInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, GuardConditionInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, GuardConditionInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::GuardConditionInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::GuardConditionInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::GuardConditionInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, StatusCondition_ptr); // copying
   void operator<<= ( ::CORBA::Any &, StatusCondition_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, StatusCondition_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::StatusCondition_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::StatusCondition_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::StatusCondition_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::SampleStateSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::SampleStateSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleStateSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SampleStateSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::SampleStateSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::SampleStateSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleStateSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SampleStateSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::ViewStateSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::ViewStateSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::ViewStateSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::ViewStateSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::ViewStateSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::ViewStateSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ViewStateSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::ViewStateSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::InstanceStateSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::InstanceStateSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::InstanceStateSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::InstanceStateSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::InstanceStateSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::InstanceStateSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::InstanceStateSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::InstanceStateSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, ReadCondition_ptr); // copying
   void operator<<= ( ::CORBA::Any &, ReadCondition_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ReadCondition_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::ReadCondition_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::ReadCondition_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ReadCondition_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, QueryCondition_ptr); // copying
   void operator<<= ( ::CORBA::Any &, QueryCondition_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, QueryCondition_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::QueryCondition_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::QueryCondition_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::QueryCondition_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::Property &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::Property*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::Property *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::Property *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::Property &); // copying version
 void operator<<= (::CORBA::Any &, DDS::Property*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Property *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::Property *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, PropertyInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, PropertyInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PropertyInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::PropertyInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::PropertyInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::PropertyInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Entity_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Entity_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Entity_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Entity_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Entity_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Entity_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DomainParticipant_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DomainParticipant_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DomainParticipant_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DomainParticipant_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DomainParticipant_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DomainParticipant_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Domain_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Domain_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Domain_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Domain_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Domain_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Domain_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DomainParticipantFactoryInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DomainParticipantFactoryInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DomainParticipantFactoryInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DomainParticipantFactoryInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DomainParticipantFactoryInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DomainParticipantFactoryInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, TypeSupport_ptr); // copying
   void operator<<= ( ::CORBA::Any &, TypeSupport_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TypeSupport_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::TypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::TypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::TypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, TopicDescription_ptr); // copying
   void operator<<= ( ::CORBA::Any &, TopicDescription_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TopicDescription_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::TopicDescription_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::TopicDescription_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::TopicDescription_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Topic_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Topic_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Topic_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Topic_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Topic_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Topic_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, ContentFilteredTopic_ptr); // copying
   void operator<<= ( ::CORBA::Any &, ContentFilteredTopic_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ContentFilteredTopic_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::ContentFilteredTopic_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::ContentFilteredTopic_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ContentFilteredTopic_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, MultiTopic_ptr); // copying
   void operator<<= ( ::CORBA::Any &, MultiTopic_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MultiTopic_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::MultiTopic_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::MultiTopic_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::MultiTopic_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Publisher_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Publisher_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Publisher_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Publisher_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Publisher_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Publisher_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DataWriter_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DataWriter_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DataWriter_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, Subscriber_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Subscriber_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Subscriber_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::Subscriber_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::Subscriber_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::Subscriber_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DataReader_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DataReader_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DataReader_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= (::CORBA::Any &, const ::DDS::SampleInfo &); // copying version
   void operator<<= (::CORBA::Any &, ::DDS::SampleInfo*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleInfo *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SampleInfo *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const DDS::SampleInfo &); // copying version
 void operator<<= (::CORBA::Any &, DDS::SampleInfo*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleInfo *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SampleInfo *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:45



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, const ::DDS::SampleInfoSeq &); // copying version
   void operator<<= ( ::CORBA::Any &, ::DDS::SampleInfoSeq*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::DDS::SampleInfoSeq *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::DDS::SampleInfoSeq *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const DDS::SampleInfoSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, DDS::SampleInfoSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::SampleInfoSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const DDS::SampleInfoSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, ErrorInfoInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, ErrorInfoInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ErrorInfoInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::ErrorInfoInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::ErrorInfoInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::ErrorInfoInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, DataReaderView_ptr); // copying
   void operator<<= ( ::CORBA::Any &, DataReaderView_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DataReaderView_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::DataReaderView_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::DataReaderView_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::DataReaderView_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace DDS
{
   void operator<<= ( ::CORBA::Any &, QosProviderInterface_ptr); // copying
   void operator<<= ( ::CORBA::Any &, QosProviderInterface_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, QosProviderInterface_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, DDS::QosProviderInterface_ptr); // copying
 void operator<<= (::CORBA::Any &, DDS::QosProviderInterface_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, DDS::QosProviderInterface_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_InstanceHandleSeq_H_
#define _TAO_CDR_OP_DDS_InstanceHandleSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::InstanceHandleSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::InstanceHandleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_InstanceHandleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::InconsistentTopicStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::InconsistentTopicStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::AllDataDisposedTopicStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::AllDataDisposedTopicStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::SampleLostStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::SampleLostStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, DDS::SampleRejectedStatusKind _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, DDS::SampleRejectedStatusKind &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::SampleRejectedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::SampleRejectedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::LivelinessLostStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::LivelinessLostStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::LivelinessChangedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::LivelinessChangedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::OfferedDeadlineMissedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::OfferedDeadlineMissedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::RequestedDeadlineMissedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::RequestedDeadlineMissedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::QosPolicyCount &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::QosPolicyCount &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_QosPolicyCountSeq_H_
#define _TAO_CDR_OP_DDS_QosPolicyCountSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::QosPolicyCountSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::QosPolicyCountSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_QosPolicyCountSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::OfferedIncompatibleQosStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::OfferedIncompatibleQosStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::RequestedIncompatibleQosStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::RequestedIncompatibleQosStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::PublicationMatchedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::PublicationMatchedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::SubscriptionMatchedStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::SubscriptionMatchedStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_ObjSeq_H_
#define _TAO_CDR_OP_DDS_ObjSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::ObjSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::ObjSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_ObjSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_SampleStateSeq_H_
#define _TAO_CDR_OP_DDS_SampleStateSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::SampleStateSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::SampleStateSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_SampleStateSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_ViewStateSeq_H_
#define _TAO_CDR_OP_DDS_ViewStateSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::ViewStateSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::ViewStateSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_ViewStateSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_InstanceStateSeq_H_
#define _TAO_CDR_OP_DDS_InstanceStateSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::InstanceStateSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::InstanceStateSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_InstanceStateSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Property &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Property &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::SampleInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::SampleInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:63

#if !defined _TAO_CDR_OP_DDS_SampleInfoSeq_H_
#define _TAO_CDR_OP_DDS_SampleInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::SampleInfoSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::SampleInfoSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_DDS_SampleInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "dds_dcps_interfacesC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

